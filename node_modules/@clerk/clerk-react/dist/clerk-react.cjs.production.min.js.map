{"version":3,"file":"clerk-react.cjs.production.min.js","sources":["../src/utils/inBrowser.ts","../src/utils/useMaxAllowedInstancesGuard.tsx","../src/errors.ts","../src/isomorphicClerk.ts","../src/utils/scriptLoader.ts","../src/contexts/assertHelpers.ts","../src/contexts/StructureContext.tsx","../src/contexts/IsomorphicClerkContext.tsx","../src/contexts/ClientContext.tsx","../src/contexts/SessionContext.ts","../src/contexts/UserContext.tsx","../src/contexts/ClerkContextWrapper.tsx","../src/contexts/ClerkProvider.tsx","../src/components/uiComponents.tsx","../src/components/controlComponents.tsx"],"sourcesContent":["export default function inBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n","import React from 'react';\n\nconst counts = new Map<string, number>();\n\nexport function useMaxAllowedInstancesGuard(\n  name: string,\n  error: string,\n  maxCount = 1,\n): void {\n  React.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      throw new Error(error);\n    }\n    counts.set(name, count + 1);\n\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\n\nexport function withMaxAllowedInstancesGuard<P>(\n  WrappedComponent: React.ComponentType<P>,\n  name: string,\n  error: string,\n): React.ComponentType<P> {\n  const displayName =\n    WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    name ||\n    'Component';\n  const Hoc = (props: P) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return <WrappedComponent {...(props as P)} />;\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n","export const noFrontendApiError =\n  'Clerk: You must add the frontendApi prop to your <ClerkProvider>';\n\nexport const noClerkProviderError =\n  'Clerk: You must wrap your application in a <ClerkProvider> component.';\n\nexport const noGuaranteedLoadedError = (hookName: string) =>\n  `Clerk: You're calling ${hookName} before there's a guarantee the client has been loaded. Call ${hookName} from a child of <SignedIn>, <SignedOut>, or <ClerkLoaded>, or use the withClerk() HOC.`;\n\nexport const noGuaranteedUserError = (hookName: string) =>\n  `Clerk: You're calling ${hookName} before there's a guarantee there's an active user. Call ${hookName} from a child of <SignedIn> or use the withUser() HOC.`;\n\nexport const multipleClerkProvidersError =\n  \"Clerk: You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nexport const hocChildrenNotAFunctionError =\n  'Clerk: Child of WithClerk must be a function.';\n","import { inBrowser, loadScript } from './utils';\nimport { noFrontendApiError } from './errors';\nimport type {\n  BrowserClerk,\n  BrowserClerkConstructor,\n  ClerkOptions,\n} from './types';\nimport type {\n  ClientResource,\n  EnvironmentResource,\n  Resources,\n  SessionResource,\n  SignInProps,\n  SignOutCallback,\n  SignUpProps,\n  UserButtonProps,\n  UserProfileProps,\n  UserResource,\n} from '@clerk/types';\n\ntype MethodName<T> = {\n  [P in keyof T]: T[P] extends Function ? P : never;\n}[keyof T];\ntype MethodCallback = () => void;\n\nexport default class IsomorphicClerk {\n  private mode: string;\n  private frontendApi: string;\n  private options: ClerkOptions;\n  private ClerkConstructor: any;\n  private clerkjs: BrowserClerk | null = null;\n  private preopenSignIn?: null | SignInProps = null;\n  private preopenSignUp?: null | SignUpProps = null;\n  private premountSignInNodes = new Map<HTMLDivElement, SignInProps>();\n  private premountSignUpNodes = new Map<HTMLDivElement, SignUpProps>();\n  private premountUserProfileNodes = new Map<\n    HTMLDivElement,\n    UserProfileProps\n  >();\n  private premountUserButtonNodes = new Map<HTMLDivElement, UserButtonProps>();\n  private premountMethodCalls = new Map<\n    MethodName<BrowserClerk>,\n    MethodCallback\n  >();\n\n  private _loaded = false;\n\n  ssrData: string | null = null;\n  ssrClient?: ClientResource;\n  ssrSession?: SessionResource | null;\n\n  constructor(\n    frontendApi: string,\n    options: ClerkOptions = {},\n    Clerk: BrowserClerkConstructor | undefined | null,\n  ) {\n    this.frontendApi = frontendApi;\n    this.options = options;\n    this.ClerkConstructor = Clerk;\n\n    this.mode = inBrowser() ? 'browser' : 'server';\n\n    // TODO: Support SRR for NextJS\n    // const ssrDataNode = document.querySelector(`script[data-clerk=\"SSR\"]`);\n    // if (ssrDataNode) {\n    //   this.ssrData = ssrDataNode.innerHTML;\n    //   const parsedData = JSON.parse(this.ssrData);\n    //   this.ssrClient = parsedData.client;\n    //   this.ssrSession = parsedData.session;\n    // }\n  }\n\n  loadClerkJS() {\n    if (!this.frontendApi) {\n      void this.throwError(noFrontendApiError);\n      return Promise.resolve();\n    }\n\n    // Load a fixed Clerk version passed as a parameter\n    if (this.ClerkConstructor) {\n      window.Clerk = new this.ClerkConstructor(\n        this.frontendApi,\n      ) as BrowserClerk;\n\n      return window.Clerk.load(this.options)\n        .then(() => this.hydrateClerkJS(window.Clerk))\n        .catch(err => this.throwError(err.message || err));\n    }\n\n    // Hotload latest ClerkJS\n    return loadScript(this.frontendApi, this.options.scriptUrl)\n      .then(() => {\n        if (window.Clerk) {\n          return window.Clerk.load(this.options);\n        }\n        throw new Error('Failed to download latest Clerk JS');\n      })\n      .then(() => this.hydrateClerkJS(window.Clerk))\n      .catch(err => this.throwError(err.message || err));\n  }\n\n  // Custom wrapper to throw an error, since we need to apply different handling between\n  // production and development builds. In Next.js we can throw a full screen error in\n  // development mode. However, in production throwing an error results in an infinite loop\n  // as shown at https://github.com/vercel/next.js/issues/6973\n  throwError(errorMsg: string) {\n    if (process.env.NODE_ENV === 'production') {\n      console.error(errorMsg);\n      return Promise.resolve();\n    }\n    throw new Error(errorMsg);\n  }\n\n  private hydrateClerkJS = async (clerkjs: BrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n\n    this.clerkjs = clerkjs;\n\n    this.premountMethodCalls.forEach(cb => cb());\n\n    if (this.preopenSignIn !== null) {\n      clerkjs.openSignIn(this.preopenSignIn);\n    }\n\n    if (this.preopenSignUp !== null) {\n      clerkjs.openSignUp(this.preopenSignUp);\n    }\n\n    this.premountSignInNodes.forEach(\n      (props: SignInProps, node: HTMLDivElement) => {\n        clerkjs.mountSignIn(node, props);\n      },\n    );\n\n    this.premountSignUpNodes.forEach(\n      (props: SignUpProps, node: HTMLDivElement) => {\n        clerkjs.mountSignUp(node, props);\n      },\n    );\n\n    this.premountUserProfileNodes.forEach(\n      (props: UserProfileProps, node: HTMLDivElement) => {\n        clerkjs.mountUserProfile(node, props);\n      },\n    );\n\n    this.premountUserButtonNodes.forEach(\n      (props: UserProfileProps, node: HTMLDivElement) => {\n        clerkjs.mountUserButton(node, props);\n      },\n    );\n\n    this._loaded = true;\n\n    return this.clerkjs;\n  };\n\n  get client(): ClientResource | undefined {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get session(): SessionResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get user(): UserResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get environment(): EnvironmentResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.environment;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  setSession = (\n    session: SessionResource | string | null,\n    beforeEmit?: (session: SessionResource | null) => void | Promise<any>,\n  ) => {\n    if (this.clerkjs) {\n      return this.clerkjs.setSession(session, beforeEmit);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  openSignIn = (props?: SignInProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.openSignIn(props);\n    } else {\n      this.preopenSignIn = props;\n    }\n  };\n\n  closeSignIn = () => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.closeSignIn();\n    } else {\n      this.preopenSignIn = null;\n    }\n  };\n\n  openSignUp = (props?: SignUpProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.openSignUp(props);\n    } else {\n      this.preopenSignUp = props;\n    }\n  };\n\n  closeSignUp = () => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.closeSignUp();\n    } else {\n      this.preopenSignUp = null;\n    }\n  };\n\n  mountSignIn = (node: HTMLDivElement, props: SignInProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.mountSignIn(node, props);\n    } else {\n      this.premountSignInNodes.set(node, props);\n    }\n  };\n\n  unmountSignIn = (node: HTMLDivElement) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.unmountSignIn(node);\n    } else {\n      this.premountSignInNodes.delete(node);\n    }\n  };\n\n  mountSignUp = (node: HTMLDivElement, props: SignUpProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.mountSignUp(node, props);\n    } else {\n      this.premountSignUpNodes.set(node, props);\n    }\n  };\n\n  unmountSignUp = (node: HTMLDivElement) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.unmountSignUp(node);\n    } else {\n      this.premountSignUpNodes.delete(node);\n    }\n  };\n\n  mountUserProfile = (node: HTMLDivElement, props: UserProfileProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.mountUserProfile(node, props);\n    } else {\n      this.premountUserProfileNodes.set(node, props);\n    }\n  };\n\n  unmountUserProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.unmountUserProfile(node);\n    } else {\n      this.premountUserProfileNodes.delete(node);\n    }\n  };\n\n  mountUserButton = (node: HTMLDivElement, props: UserButtonProps) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.mountUserButton(node, props);\n    } else {\n      this.premountUserButtonNodes.set(node, props);\n    }\n  };\n\n  unmountUserButton = (node: HTMLDivElement) => {\n    if (this.clerkjs && this._loaded) {\n      this.clerkjs.unmountUserButton(node);\n    } else {\n      this.premountUserButtonNodes.delete(node);\n    }\n  };\n\n  addListener = (listener: (emission: Resources) => void) => {\n    const callback = () => this.clerkjs?.addListener(listener);\n    if (this.clerkjs) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('addListener', callback);\n    }\n  };\n\n  loadFromServer = (token: string) => {\n    if (this.mode === 'browser') {\n      void this.throwError(\n        'loadFromServer cannot be called in a browser context.',\n      );\n    }\n\n    this.ssrData = JSON.stringify({\n      client: this.client,\n      session: this.session,\n      token: token,\n    });\n  };\n\n  navigate = (to: string): void => {\n    const callback = () => this.clerkjs?.navigate(to);\n    if (this.clerkjs && this._loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('navigate', callback);\n    }\n  };\n\n  redirectToSignIn = (): void => {\n    const callback = () => this.clerkjs?.redirectToSignIn();\n    if (this.clerkjs && this._loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignIn', callback);\n    }\n  };\n\n  redirectToSignUp = (): void => {\n    const callback = () => this.clerkjs?.redirectToSignUp();\n    if (this.clerkjs && this._loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignUp', callback);\n    }\n  };\n\n  redirectToUserProfile = (): void => {\n    const callback = () => this.clerkjs?.redirectToUserProfile();\n    if (this.clerkjs && this._loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToUserProfile', callback);\n    }\n  };\n\n  signOut = async (signOutCallback?: SignOutCallback): Promise<void> => {\n    const callback = () => this.clerkjs?.signOut(signOutCallback);\n    if (this.clerkjs && this._loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOut', callback);\n    }\n  };\n\n  signOutOne = async (signOutCallback?: SignOutCallback): Promise<void> => {\n    const callback = () => this.clerkjs?.signOutOne(signOutCallback);\n    if (this.clerkjs && this._loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOutOne', callback);\n    }\n  };\n}\n","import { version } from '../../package.json';\n\nconst FAILED_TO_LOAD_ERROR = 'Clerk: Failed to load Clerk';\nconst MISSING_PROVIDER_ERROR = 'Clerk: Missing provider';\nconst MISSING_BODY_ERROR = 'Clerk: Missing <body> element.';\n\nfunction isStaging(frontendApi: string): boolean {\n  return (\n    frontendApi.endsWith('.lclstage.dev') ||\n    frontendApi.endsWith('.stgstage.dev') ||\n    frontendApi.endsWith('.clerkstage.dev')\n  );\n}\n\nfunction getScriptSrc(\n  frontendApi: string,\n  localScriptSrc: string | undefined,\n): string {\n  if (localScriptSrc) {\n    return localScriptSrc;\n  }\n\n  const majorVersion = isStaging(frontendApi)\n    ? 'staging'\n    : parseInt(version.split('.')[0], 10);\n\n  return `https://${frontendApi}/npm/@clerk/clerk-js@${majorVersion}/dist/clerk.browser.js`;\n}\n\nexport default function loadScript(\n  frontendApi: string,\n  localScriptSrc: string | undefined,\n): Promise<HTMLScriptElement | null> {\n  return new Promise((resolve, reject) => {\n    if (window.Clerk) {\n      resolve(null);\n    }\n\n    if (!frontendApi) {\n      reject(MISSING_PROVIDER_ERROR);\n    }\n\n    const script = document.createElement('script');\n    const src = getScriptSrc(frontendApi, localScriptSrc);\n\n    script.setAttribute('data-clerk-frontend-api', frontendApi);\n    script.setAttribute('crossorigin', 'anonymous');\n    script.async = true;\n\n    if (!document.body) {\n      reject(MISSING_BODY_ERROR);\n    }\n\n    script.addEventListener('load', () => resolve(script));\n    script.addEventListener('error', () => reject(FAILED_TO_LOAD_ERROR));\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n}\n","import {\n  noClerkProviderError,\n  noGuaranteedLoadedError,\n  noGuaranteedUserError,\n} from '../errors';\n\nexport function assertWrappedByClerkProvider(\n  contextVal: unknown,\n): asserts contextVal {\n  if (!contextVal) {\n    throw new Error(noClerkProviderError);\n  }\n}\n\nexport function assertClerkLoadedGuarantee(\n  guarantee: unknown,\n  hookName: string,\n): asserts guarantee {\n  if (!guarantee) {\n    throw new Error(noGuaranteedLoadedError(hookName));\n  }\n}\n\nexport function assertUserGuarantee(\n  guarantee: unknown,\n  hookName: string,\n): asserts guarantee {\n  if (!guarantee) {\n    throw new Error(noGuaranteedUserError(hookName));\n  }\n}\n","import React from 'react';\n\nexport interface StructureContextValue {\n  guaranteedLoaded: boolean;\n  guaranteedUser: boolean;\n}\n\n// TODO: alternatively, split it into a context\n// per protected provider\nexport const StructureContextStates = Object.freeze({\n  noGuarantees: Object.freeze({\n    guaranteedLoaded: false,\n    guaranteedUser: false,\n  }),\n  guaranteedLoaded: Object.freeze({\n    guaranteedLoaded: true,\n    guaranteedUser: false,\n  }),\n  guaranteedAll: Object.freeze({\n    guaranteedLoaded: true,\n    guaranteedUser: true,\n  }),\n});\n\nexport const StructureContext = React.createContext<\n  StructureContextValue | undefined\n>(undefined);\nStructureContext.displayName = 'StructureContext';\n","import React, { useContext } from 'react';\nimport IsomorphicClerk from '../isomorphicClerk';\nimport {\n  assertClerkLoadedGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\nimport {\n  StructureContext,\n  StructureContextStates,\n} from '../contexts/StructureContext';\nimport { inBrowser } from '../utils';\nimport { hocChildrenNotAFunctionError } from '../errors';\nimport { LoadedClerk } from '../types';\n\ntype IsomorphicClerkContextValue = {\n  value: IsomorphicClerk;\n};\nexport const IsomorphicClerkContext = React.createContext<\n  IsomorphicClerkContextValue | undefined\n>(undefined);\nIsomorphicClerkContext.displayName = 'IsomorphicClerkContext';\n\nexport const useClerk = (): LoadedClerk => {\n  const structureCtx = useContext(StructureContext);\n  const clerkCtx = useContext(IsomorphicClerkContext);\n  assertWrappedByClerkProvider(structureCtx);\n  assertWrappedByClerkProvider(clerkCtx);\n  assertClerkLoadedGuarantee(structureCtx.guaranteedLoaded, 'useClerk()');\n  assertClerkLoadedGuarantee(clerkCtx.value, 'useClerk()');\n  //  The value is an instance of IsomorphicClerk, not Clerk\n  // TODO: Remove type cast\n  return (clerkCtx.value as unknown) as LoadedClerk;\n};\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName =\n    displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Omit<P, 'clerk'>) => {\n    const structureCtx = useContext(StructureContext);\n    const clerkCtx = useContext(IsomorphicClerkContext);\n\n    if (!inBrowser()) {\n      return null;\n    }\n\n    assertWrappedByClerkProvider(structureCtx);\n    assertWrappedByClerkProvider(clerkCtx);\n\n    const clerk = (clerkCtx.value as unknown) as LoadedClerk;\n    if (!clerk) {\n      return null;\n    }\n\n    if (structureCtx.guaranteedLoaded) {\n      return <Component {...(props as P)} clerk={clerk} />;\n    }\n\n    if (clerk.client) {\n      return (\n        <StructureContext.Provider\n          value={StructureContextStates.guaranteedLoaded}\n        >\n          <Component {...(props as P)} clerk={clerk} />\n        </StructureContext.Provider>\n      );\n    }\n\n    return null;\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => (\n  <StructureContext.Consumer>\n    {structureCtx => (\n      <IsomorphicClerkContext.Consumer>\n        {clerkCtx => {\n          if (typeof children !== 'function') {\n            throw new Error(hocChildrenNotAFunctionError);\n          }\n\n          assertWrappedByClerkProvider(structureCtx);\n          assertWrappedByClerkProvider(clerkCtx);\n\n          const clerk = (clerkCtx.value as unknown) as LoadedClerk;\n          if (!clerk) {\n            return null;\n          }\n\n          if (structureCtx.guaranteedLoaded) {\n            return children(clerk);\n          }\n\n          if (clerk.client) {\n            return (\n              <StructureContext.Provider\n                value={StructureContextStates.guaranteedLoaded}\n              >\n                {children(clerk)}\n              </StructureContext.Provider>\n            );\n          }\n\n          return null;\n        }}\n      </IsomorphicClerkContext.Consumer>\n    )}\n  </StructureContext.Consumer>\n);\n","import React, { useContext } from 'react';\nimport {\n  ClientResource,\n  SessionResource,\n  SignInResource,\n  SignUpResource,\n} from '@clerk/types';\nimport {\n  assertClerkLoadedGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\nimport { StructureContext } from './StructureContext';\n\ntype ClientContextValue = { value: ClientResource | undefined | null };\nexport const ClientContext = React.createContext<\n  ClientContextValue | undefined\n>(undefined);\nClientContext.displayName = 'ClientContext';\n\nexport function useSignIn(): SignInResource {\n  const structureCtx = useContext(StructureContext);\n  const clientCtx = React.useContext(ClientContext);\n  assertWrappedByClerkProvider(clientCtx);\n  assertWrappedByClerkProvider(structureCtx);\n  assertClerkLoadedGuarantee(structureCtx.guaranteedLoaded, 'useSignIn()');\n  return (clientCtx.value as ClientResource).signIn;\n}\n\nexport function useSignUp(): SignUpResource {\n  const structureCtx = useContext(StructureContext);\n  const clientCtx = React.useContext(ClientContext);\n  assertWrappedByClerkProvider(clientCtx);\n  assertWrappedByClerkProvider(structureCtx);\n  assertClerkLoadedGuarantee(structureCtx.guaranteedLoaded, 'useSignUp()');\n  return (clientCtx.value as ClientResource).signUp;\n}\n\nexport function useSessionList(): SessionResource[] {\n  const structureCtx = useContext(StructureContext);\n  const clientCtx = React.useContext(ClientContext);\n  assertWrappedByClerkProvider(clientCtx);\n  assertWrappedByClerkProvider(structureCtx);\n  assertClerkLoadedGuarantee(structureCtx.guaranteedLoaded, 'useSessionList()');\n  return (clientCtx.value as ClientResource).sessions;\n}\n","import React, { useContext } from 'react';\nimport { SessionResource } from '@clerk/types';\nimport {\n  assertUserGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\nimport { StructureContext } from './StructureContext';\n\ntype SessionContextValue = { value: SessionResource | null | undefined };\nexport const SessionContext = React.createContext<\n  SessionContextValue | undefined\n>(undefined);\nSessionContext.displayName = 'SessionContext';\n\nexport function useSession(): SessionResource {\n  const structureCtx = useContext(StructureContext);\n  const sessionCtx = React.useContext(SessionContext);\n  assertWrappedByClerkProvider(sessionCtx);\n  assertWrappedByClerkProvider(structureCtx);\n  assertUserGuarantee(structureCtx.guaranteedUser, 'useSession()');\n  return sessionCtx.value as SessionResource;\n}\n","import React, { useContext } from 'react';\nimport { UserResource } from '@clerk/types';\nimport {\n  assertUserGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\nimport {\n  StructureContext,\n  StructureContextStates,\n} from '../contexts/StructureContext';\nimport { inBrowser } from '../utils';\nimport { hocChildrenNotAFunctionError } from '../errors';\n\ntype UserContextValue = { value: UserResource | null | undefined };\nexport const UserContext = React.createContext<UserContextValue | undefined>(\n  undefined,\n);\nUserContext.displayName = 'UserContext';\n\nexport function useUserContext(): UserContextValue {\n  const userCtx = useContext(UserContext);\n  assertWrappedByClerkProvider(userCtx);\n  return userCtx;\n}\n\nexport function useUser(): UserResource {\n  const structureCtx = useContext(StructureContext);\n  assertWrappedByClerkProvider(structureCtx);\n  assertUserGuarantee(structureCtx.guaranteedUser, 'useUser()');\n\n  const userCtx = useUserContext();\n  assertUserGuarantee(userCtx.value, 'useUser()');\n  return userCtx.value;\n}\n\nexport const withUser = <P extends { user: UserResource }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName =\n    displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const HOC: React.FC<Omit<P, 'user'>> = (props: Omit<P, 'user'>) => {\n    const structureCtx = useContext(StructureContext);\n    const userCtx = useContext(UserContext);\n    if (!inBrowser()) {\n      return null;\n    }\n    assertWrappedByClerkProvider(structureCtx);\n    assertWrappedByClerkProvider(userCtx);\n    const user = userCtx.value;\n\n    if (structureCtx.guaranteedUser && user) {\n      return <Component {...(props as P)} user={user} />;\n    }\n\n    if (user) {\n      return (\n        <StructureContext.Provider value={StructureContextStates.guaranteedAll}>\n          <Component {...(props as P)} user={user} />\n        </StructureContext.Provider>\n      );\n    }\n\n    return null;\n  };\n\n  HOC.displayName = `withUser(${displayName})`;\n  return HOC;\n};\n\nexport const WithUser: React.FC<{\n  children: (user: UserResource) => React.ReactNode;\n}> = ({ children }) => (\n  <StructureContext.Consumer>\n    {structureCtx => (\n      <UserContext.Consumer>\n        {userCtx => {\n          if (typeof children !== 'function') {\n            throw new Error(hocChildrenNotAFunctionError);\n          }\n\n          assertWrappedByClerkProvider(structureCtx);\n          assertWrappedByClerkProvider(userCtx);\n          const user = userCtx.value;\n\n          if (structureCtx.guaranteedUser && user) {\n            return children(user);\n          }\n\n          if (user) {\n            return (\n              <StructureContext.Provider\n                value={StructureContextStates.guaranteedAll}\n              >\n                {children(user)}\n              </StructureContext.Provider>\n            );\n          }\n\n          return null;\n        }}\n      </UserContext.Consumer>\n    )}\n  </StructureContext.Consumer>\n);\n","import React from 'react';\nimport { ClientResource, Resources } from '@clerk/types';\nimport IsomorphicClerk from '../isomorphicClerk';\nimport { IsomorphicClerkContext } from './IsomorphicClerkContext';\nimport { ClientContext } from './ClientContext';\nimport { SessionContext } from './SessionContext';\nimport { UserContext } from './UserContext';\n\ntype ClerkContextWrapperProps = {\n  isomorphicClerk: IsomorphicClerk;\n  children: React.ReactNode;\n  clerkLoaded: boolean;\n};\n\ntype ClerkContextProviderState = Resources;\n\nexport function ClerkContextWrapper({\n  isomorphicClerk,\n  children,\n  clerkLoaded,\n}: ClerkContextWrapperProps): JSX.Element | null {\n  const clerk = isomorphicClerk;\n\n  const [state, setState] = React.useState<ClerkContextProviderState>({\n    client: clerk.client as ClientResource,\n    session: clerk.session,\n    user: clerk.user,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const { client, session, user } = state;\n  const clerkCtx = React.useMemo(() => ({ value: clerk }), [clerkLoaded]);\n  const clientCtx = React.useMemo(() => ({ value: client }), [client]);\n  const sessionCtx = React.useMemo(() => ({ value: session }), [session]);\n  const userCtx = React.useMemo(() => ({ value: user }), [user]);\n\n  return (\n    <IsomorphicClerkContext.Provider value={clerkCtx}>\n      <ClientContext.Provider value={clientCtx}>\n        <SessionContext.Provider value={sessionCtx}>\n          <UserContext.Provider value={userCtx}>\n            <React.Fragment key={session ? session.id : 'no-users'}>\n              {children}\n            </React.Fragment>\n          </UserContext.Provider>\n        </SessionContext.Provider>\n      </ClientContext.Provider>\n    </IsomorphicClerkContext.Provider>\n  );\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport IsomorphicClerk from '../isomorphicClerk';\nimport { withMaxAllowedInstancesGuard } from '../utils';\nimport { multipleClerkProvidersError } from '../errors';\nimport { ClerkContextWrapper } from './ClerkContextWrapper';\nimport { StructureContext, StructureContextStates } from './StructureContext';\nimport { BrowserClerkConstructor, ClerkOptions } from '../types';\n\nexport interface ClerkProviderProps extends ClerkOptions {\n  frontendApi?: string;\n  Clerk?: BrowserClerkConstructor;\n}\n\nfunction ClerkProviderBase(props: React.PropsWithChildren<ClerkProviderProps>) {\n  const clerk = useMemo(() => {\n    const { frontendApi = '', Clerk: ClerkConstructor, ...rest } = props;\n    return new IsomorphicClerk(frontendApi, rest, ClerkConstructor);\n  }, []);\n\n  const [clerkLoaded, setClerkLoaded] = useState(false);\n\n  useEffect(() => {\n    void clerk.loadClerkJS().then(() => setClerkLoaded(true));\n  }, []);\n\n  return (\n    <StructureContext.Provider value={StructureContextStates.noGuarantees}>\n      {clerk instanceof IsomorphicClerk && clerk.ssrData && (\n        <script\n          type='application/json'\n          data-clerk='SSR'\n          dangerouslySetInnerHTML={{ __html: clerk.ssrData }}\n        />\n      )}\n      <ClerkContextWrapper isomorphicClerk={clerk} clerkLoaded={clerkLoaded}>\n        {props.children}\n      </ClerkContextWrapper>\n    </StructureContext.Provider>\n  );\n}\n\nexport const ClerkProvider = withMaxAllowedInstancesGuard(\n  ClerkProviderBase,\n  'ClerkProvider',\n  multipleClerkProvidersError,\n);\n","import React from 'react';\nimport {\n  SignInProps,\n  SignUpProps,\n  UserButtonProps,\n  UserProfileProps,\n} from '@clerk/types';\nimport { MountProps, WithClerkProp } from '../types';\nimport { withClerk } from '../contexts';\n\n// README: <Portal/> should be a class pure component in order for mount and unmount\n// lifecycle props to be invoked correctly. Replacing the class component with a\n// functional component wrapped with a React.memo is not identical to the original\n// class implementation due to React intricacies such as the useEffect’s cleanup\n// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.\n\n// More information can be found at https://clerkinc.slack.com/archives/C015S0BGH8R/p1624891993016300\n\n// The function Portal implementation is commented out for future reference.\n\n// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {\n//   const portalRef = React.createRef<HTMLDivElement>();\n\n//   useEffect(() => {\n//     if (portalRef.current) {\n//       mount(portalRef.current, props);\n//     }\n//     return () => {\n//       if (portalRef.current) {\n//         unmount(portalRef.current);\n//       }\n//     };\n//   }, []);\n\n//   return <div ref={portalRef} />;\n// });\n\n// Portal.displayName = 'ClerkPortal';\nclass Portal extends React.PureComponent<MountProps, {}> {\n  private portalRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    if (this.portalRef.current) {\n      this.props.mount(this.portalRef.current, this.props.props);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      this.props.unmount(this.portalRef.current);\n    }\n  }\n\n  render() {\n    return <div ref={this.portalRef} />;\n  }\n}\n\nexport const SignIn = withClerk(\n  ({ clerk, ...props }: WithClerkProp<SignInProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountSignIn}\n        unmount={clerk.unmountSignIn}\n        props={props}\n      />\n    );\n  },\n  'SignIn',\n);\n\nexport const SignUp = withClerk(\n  ({ clerk, ...props }: WithClerkProp<SignUpProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountSignUp}\n        unmount={clerk.unmountSignUp}\n        props={props}\n      />\n    );\n  },\n  'SignUp',\n);\n\nexport const UserProfile = withClerk(\n  ({ clerk, ...props }: WithClerkProp<UserProfileProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountUserProfile}\n        unmount={clerk.unmountUserProfile}\n        props={props}\n      />\n    );\n  },\n  'UserProfile',\n);\n\nexport const UserButton = withClerk(\n  ({ clerk, ...props }: WithClerkProp<UserButtonProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountUserButton}\n        unmount={clerk.unmountUserButton}\n        props={props}\n      />\n    );\n  },\n  'UserButton',\n);\n","import React from 'react';\nimport { withClerk, withUser } from '../contexts';\nimport { useUserContext } from '../contexts/UserContext';\n\nexport const SignedIn: React.FC = withUser(({ children }) => {\n  return <>{children}</>;\n}, 'SignedIn');\n\nexport const SignedOut: React.FC = withClerk(({ children }) => {\n  const userCtx = useUserContext();\n  return userCtx.value === null ? <>{children}</> : null;\n}, 'SignedOut');\n\nexport const ClerkLoaded: React.FC = withClerk(({ children }) => {\n  return <>{children}</>;\n}, 'ClerkLoaded');\n\nexport const RedirectToSignIn = withClerk(({ clerk }) => {\n  const { client, environment, session } = clerk;\n  const hasActiveSessions =\n    client.activeSessions && client.activeSessions.length > 0;\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions && environment) {\n      const { afterSignOutOneUrl } = environment.displayConfig;\n      void clerk.navigate(afterSignOutOneUrl);\n    } else {\n      clerk.redirectToSignIn();\n    }\n  }, []);\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToSignUp();\n  }, []);\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, 'redirectToUserProfile');\n"],"names":["inBrowser","window","counts","Map","withMaxAllowedInstancesGuard","WrappedComponent","name","error","Hoc","props","maxCount","React","useEffect","count","get","Error","set","useMaxAllowedInstancesGuard","displayName","IsomorphicClerk","frontendApi","options","Clerk","this","clerkjs","premountMethodCalls","forEach","cb","_this","preopenSignIn","openSignIn","preopenSignUp","openSignUp","premountSignInNodes","node","mountSignIn","premountSignUpNodes","mountSignUp","premountUserProfileNodes","mountUserProfile","premountUserButtonNodes","mountUserButton","_loaded","session","beforeEmit","_this2","setSession","Promise","reject","closeSignIn","closeSignUp","unmountSignIn","unmountSignUp","unmountUserProfile","unmountUserButton","listener","callback","_this2$clerkjs","addListener","token","mode","throwError","ssrData","JSON","stringify","client","to","_this2$clerkjs2","navigate","_this2$clerkjs3","redirectToSignIn","_this2$clerkjs4","redirectToSignUp","_this2$clerkjs5","redirectToUserProfile","signOutCallback","_this3","_this3$clerkjs","signOut","_this4","_this4$clerkjs","signOutOne","ClerkConstructor","loadClerkJS","localScriptSrc","load","then","_this5","hydrateClerkJS","err","message","scriptUrl","resolve","script","document","createElement","src","majorVersion","endsWith","isStaging","parseInt","split","getScriptSrc","setAttribute","async","body","addEventListener","appendChild","errorMsg","console","user","environment","assertWrappedByClerkProvider","contextVal","assertClerkLoadedGuarantee","guarantee","hookName","noGuaranteedLoadedError","assertUserGuarantee","noGuaranteedUserError","StructureContextStates","Object","freeze","noGuarantees","guaranteedLoaded","guaranteedUser","guaranteedAll","StructureContext","createContext","undefined","IsomorphicClerkContext","withClerk","Component","HOC","structureCtx","useContext","clerkCtx","clerk","value","Provider","ClientContext","SessionContext","UserContext","useUserContext","userCtx","withUser","ClerkContextWrapper","children","clerkLoaded","isomorphicClerk","useState","state","setState","e","useMemo","clientCtx","sessionCtx","Fragment","key","id","ClerkProviderBase","rest","setClerkLoaded","type","dangerouslySetInnerHTML","__html","ClerkProvider","Portal","createRef","componentDidMount","portalRef","current","mount","componentWillUnmount","unmount","render","ref","PureComponent","SignIn","SignUp","UserProfile","UserButton","SignedIn","SignedOut","ClerkLoaded","RedirectToSignIn","hasActiveSessions","activeSessions","length","displayConfig","afterSignOutOneUrl","RedirectToSignUp","RedirectToUserProfile","Consumer","sessions","signIn","signUp"],"mappings":"gfAAwBA,UACG,oBAAXC,OCChB,IAAMC,EAAS,IAAIC,IAoBnB,SAAgBC,EACdC,EACAC,EACAC,OAOMC,EAAM,SAACC,UA5Bf,SACEH,EACAC,EACAG,YAAAA,IAAAA,EAAW,GAEXC,EAAMC,WAAU,eACRC,EAAQX,EAAOY,IAAIR,IAAS,KAC9BO,GAASH,QACL,IAAIK,MAAMR,UAElBL,EAAOc,IAAIV,EAAMO,EAAQ,GAElB,WACLX,EAAOc,IAAIV,GAAOJ,EAAOY,IAAIR,IAAS,GAAK,MAE5C,IAcDW,CAA4BX,EAAMC,GAC3BI,gBAACN,mBAAsBI,YAEhCD,EAAIU,6CARFb,EAAiBa,aACjBb,EAAiBC,MACjBA,GACA,iBAMKE,ECrCF,ICyBcW,wBA2BjBC,EACAC,EACAC,gBAgEAC,OAoPuBA,OASAA,cA9TvBF,IAAAA,EAAwB,iBAvBa,wBACM,wBACA,8BACf,IAAIlB,6BACJ,IAAIA,kCACC,IAAIA,iCAIL,IAAIA,6BACR,IAAIA,kBAKhB,eAEO,kCAkEOqB,WACzBA,QACG,IAAIT,MAAM,8CAGbS,QAAUA,IAEVC,oBAAoBC,SAAQ,SAAAC,UAAMA,OAEZ,OAAvBC,EAAKC,eACPL,EAAQM,WAAWF,EAAKC,eAGC,OAAvBD,EAAKG,eACPP,EAAQQ,WAAWJ,EAAKG,iBAGrBE,oBAAoBP,SACvB,SAACjB,EAAoByB,GACnBV,EAAQW,YAAYD,EAAMzB,QAIzB2B,oBAAoBV,SACvB,SAACjB,EAAoByB,GACnBV,EAAQa,YAAYH,EAAMzB,QAIzB6B,yBAAyBZ,SAC5B,SAACjB,EAAyByB,GACxBV,EAAQe,iBAAiBL,EAAMzB,QAI9B+B,wBAAwBd,SAC3B,SAACjB,EAAyByB,GACxBV,EAAQiB,gBAAgBP,EAAMzB,QAI7BiC,SAAU,kBAERd,EAAKJ,6DAuCD,SACXmB,EACAC,UAEIC,EAAKrB,QACAqB,EAAKrB,QAAQsB,WAAWH,EAASC,GAEjCG,QAAQC,0BAIN,SAACvC,GACRoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQM,WAAWrB,GAExBoC,EAAKhB,cAAgBpB,oBAIX,WACRoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQyB,cAEbJ,EAAKhB,cAAgB,sBAIZ,SAACpB,GACRoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQQ,WAAWvB,GAExBoC,EAAKd,cAAgBtB,oBAIX,WACRoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQ0B,cAEbL,EAAKd,cAAgB,uBAIX,SAACG,EAAsBzB,GAC/BoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQW,YAAYD,EAAMzB,GAE/BoC,EAAKZ,oBAAoBjB,IAAIkB,EAAMzB,uBAIvB,SAACyB,GACXW,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQ2B,cAAcjB,GAE3BW,EAAKZ,2BAA2BC,qBAItB,SAACA,EAAsBzB,GAC/BoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQa,YAAYH,EAAMzB,GAE/BoC,EAAKT,oBAAoBpB,IAAIkB,EAAMzB,uBAIvB,SAACyB,GACXW,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQ4B,cAAclB,GAE3BW,EAAKT,2BAA2BF,0BAIjB,SAACA,EAAsBzB,GACpCoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQe,iBAAiBL,EAAMzB,GAEpCoC,EAAKP,yBAAyBtB,IAAIkB,EAAMzB,4BAIvB,SAACyB,GAChBW,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQ6B,mBAAmBnB,GAEhCW,EAAKP,gCAAgCJ,yBAIvB,SAACA,EAAsBzB,GACnCoC,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQiB,gBAAgBP,EAAMzB,GAEnCoC,EAAKL,wBAAwBxB,IAAIkB,EAAMzB,2BAIvB,SAACyB,GACfW,EAAKrB,SAAWqB,EAAKH,QACvBG,EAAKrB,QAAQ8B,kBAAkBpB,GAE/BW,EAAKL,+BAA+BN,qBAI1B,SAACqB,OACPC,EAAW,kCAAMX,EAAKrB,4BAALiC,EAAcC,YAAYH,IAC7CV,EAAKrB,QACPgC,IAEAX,EAAKpB,oBAAoBT,IAAI,cAAewC,wBAI/B,SAACG,GACE,YAAdd,EAAKe,MACFf,EAAKgB,WACR,yDAIJhB,EAAKiB,QAAUC,KAAKC,UAAU,CAC5BC,OAAQpB,EAAKoB,OACbtB,QAASE,EAAKF,QACdgB,MAAOA,mBAIA,SAACO,OACJV,EAAW,kCAAMX,EAAKrB,4BAAL2C,EAAcC,SAASF,IAC1CrB,EAAKrB,SAAWqB,EAAKH,QAClBc,IAELX,EAAKpB,oBAAoBT,IAAI,WAAYwC,0BAI1B,eACXA,EAAW,kCAAMX,EAAKrB,4BAAL6C,EAAcC,oBACjCzB,EAAKrB,SAAWqB,EAAKH,QACvBc,IAEAX,EAAKpB,oBAAoBT,IAAI,mBAAoBwC,0BAIlC,eACXA,EAAW,kCAAMX,EAAKrB,4BAAL+C,EAAcC,oBACjC3B,EAAKrB,SAAWqB,EAAKH,QACvBc,IAEAX,EAAKpB,oBAAoBT,IAAI,mBAAoBwC,+BAI7B,eAChBA,EAAW,kCAAMX,EAAKrB,4BAALiD,EAAcC,yBACjC7B,EAAKrB,SAAWqB,EAAKH,QACvBc,IAEAX,EAAKpB,oBAAoBT,IAAI,wBAAyBwC,0BAIzCmB,WACTnB,EAAW,kCAAMoB,EAAKpD,4BAALqD,EAAcC,QAAQH,WACzCC,EAAKpD,SAAWoD,EAAKlC,wBAChBc,QAEF/B,oBAAoBT,IAAI,UAAWwC,mFAIxBmB,WACZnB,EAAW,kCAAMuB,EAAKvD,4BAALwD,EAAcC,WAAWN,WAC5CI,EAAKvD,SAAWuD,EAAKrC,wBAChBc,QAEF/B,oBAAoBT,IAAI,aAAcwC,+DA/TxCpC,YAAcA,OACdC,QAAUA,OACV6D,iBAAmB5D,OAEnBsC,KAAO5D,IAAc,UAAY,sCAYxCmF,YAAA,eC1CA/D,EACAgE,gBD0CO7D,KAAKH,YAMNG,KAAK2D,kBACPjF,OAAOqB,MAAQ,IAAIC,KAAK2D,iBACtB3D,KAAKH,aAGAnB,OAAOqB,MAAM+D,KAAK9D,KAAKF,SAC3BiE,MAAK,kBAAMC,EAAKC,eAAevF,OAAOqB,iBAChC,SAAAmE,UAAOF,EAAK1B,WAAW4B,EAAIC,SAAWD,QCxDnDrE,ED4DoBG,KAAKH,YC3DzBgE,ED2DsC7D,KAAKF,QAAQsE,UCzD5C,IAAI5C,SAAQ,SAAC6C,EAAS5C,GACvB/C,OAAOqB,OACTsE,EAAQ,MAGLxE,GACH4B,EApCyB,+BAuCrB6C,EAASC,SAASC,cAAc,UAChCC,EA7BV,SACE5E,EACAgE,MAEIA,SACKA,MAGHa,EAhBR,SAAmB7E,UAEfA,EAAY8E,SAAS,kBACrB9E,EAAY8E,SAAS,kBACrB9E,EAAY8E,SAAS,mBAYFC,CAAU/E,GAC3B,UACAgF,kBAAiBC,MAAM,KAAK,GAAI,qBAElBjF,0BAAmC6E,2BAiBvCK,CAAalF,EAAagE,GAEtCS,EAAOU,aAAa,0BAA2BnF,GAC/CyE,EAAOU,aAAa,cAAe,aACnCV,EAAOW,OAAQ,EAEVV,SAASW,MACZzD,EA9CqB,kCAiDvB6C,EAAOa,iBAAiB,QAAQ,kBAAMd,EAAQC,MAC9CA,EAAOa,iBAAiB,SAAS,kBAAM1D,EApDd,kCAsDzB6C,EAAOG,IAAMA,EACbF,SAASW,KAAKE,YAAYd,ODkCvBP,MAAK,cACArF,OAAOqB,aACFrB,OAAOqB,MAAM+D,KAAKE,EAAKlE,eAE1B,IAAIN,MAAM,yCAEjBuE,MAAK,kBAAMC,EAAKC,eAAevF,OAAOqB,iBAChC,SAAAmE,UAAOF,EAAK1B,WAAW4B,EAAIC,SAAWD,OAxBxClE,KAAKsC,WDzEd,oEC0EWd,QAAQ6C,cA8BnB/B,WAAA,SAAW+C,UAEPC,QAAQtG,MAAMqG,GACP7D,QAAQ6C,mDAoDbrE,KAAKC,QACAD,KAAKC,QAAQyC,qDAQlB1C,KAAKC,QACAD,KAAKC,QAAQmB,mDAQlBpB,KAAKC,QACAD,KAAKC,QAAQsF,uDAQlBvF,KAAKC,QACAD,KAAKC,QAAQuF,0NEtLVC,EACdC,OAEKA,QACG,IAAIlG,MHNZ,kFGUcmG,EACdC,EACAC,OAEKD,QACG,IAAIpG,MHbyB,SAACqG,kCACbA,kEAAwEA,4FGY/EC,CAAwBD,aAI5BE,EACdH,EACAC,OAEKD,QACG,IAAIpG,MHnBuB,SAACqG,kCACXA,8DAAoEA,2DGkB3EG,CAAsBH,ICnBnC,IAAMI,EAAyBC,OAAOC,OAAO,CAClDC,aAAcF,OAAOC,OAAO,CAC1BE,kBAAkB,EAClBC,gBAAgB,IAElBD,iBAAkBH,OAAOC,OAAO,CAC9BE,kBAAkB,EAClBC,gBAAgB,IAElBC,cAAeL,OAAOC,OAAO,CAC3BE,kBAAkB,EAClBC,gBAAgB,MAIPE,EAAmBpH,EAAMqH,mBAEpCC,GACFF,EAAiB7G,YAAc,uBCVlBgH,EAAyBvH,EAAMqH,mBAE1CC,GACFC,EAAuBhH,YAAc,6BAcxBiH,EAAY,SACvBC,EACAlH,GAIAkH,EAAUlH,YAFVA,EACEA,GAAekH,EAAUlH,aAAekH,EAAU9H,MAAQ,gBAEtD+H,EAAM,SAAC5H,OACL6H,EAAeC,aAAWR,GAC1BS,EAAWD,aAAWL,OAEvBlI,WACI,KAGTgH,EAA6BsB,GAC7BtB,EAA6BwB,OAEvBC,EAASD,EAASE,aACnBD,EAIDH,EAAaV,iBACRjH,gBAACyH,mBAAe3H,GAAagI,MAAOA,KAGzCA,EAAMxE,OAENtD,gBAACoH,EAAiBY,UAChBD,MAAOlB,EAAuBI,kBAE9BjH,gBAACyH,mBAAe3H,GAAagI,MAAOA,MAKnC,KAjBE,aAmBXJ,EAAInH,yBAA2BA,MACxBmH,GC5DIO,EAAgBjI,EAAMqH,mBAEjCC,GACFW,EAAc1H,YAAc,oBCRf2H,EAAiBlI,EAAMqH,mBAElCC,GACFY,EAAe3H,YAAc,qBCEhB4H,EAAcnI,EAAMqH,mBAC/BC,GAIF,SAAgBc,QACRC,EAAUT,aAAWO,UAC3B9B,EAA6BgC,GACtBA,EALTF,EAAY5H,YAAc,cAkB1B,IAAa+H,EAAW,SACtBb,EACAlH,GAIAkH,EAAUlH,YAFVA,EACEA,GAAekH,EAAUlH,aAAekH,EAAU9H,MAAQ,gBAGtD+H,EAAiC,SAAC5H,OAChC6H,EAAeC,aAAWR,GAC1BiB,EAAUT,aAAWO,OACtB9I,WACI,KAETgH,EAA6BsB,GAC7BtB,EAA6BgC,OACvBlC,EAAOkC,EAAQN,aAEjBJ,EAAaT,gBAAkBf,EAC1BnG,gBAACyH,mBAAe3H,GAAaqG,KAAMA,KAGxCA,EAEAnG,gBAACoH,EAAiBY,UAASD,MAAOlB,EAAuBM,eACvDnH,gBAACyH,mBAAe3H,GAAaqG,KAAMA,MAKlC,aAGTuB,EAAInH,wBAA0BA,MACvBmH,YCrDOa,SAEdC,IAAAA,SACAC,IAAAA,YAEMX,IAJNY,kBAM0B1I,EAAM2I,SAAoC,CAClErF,OAAQwE,EAAMxE,OACdtB,QAAS8F,EAAM9F,QACfmE,KAAM2B,EAAM3B,OAHPyC,OAAOC,OAMd7I,EAAMC,WAAU,kBACP6H,EAAM/E,aAAY,SAAA+F,UAAKD,OAAcC,SAC3C,QAEKxF,EAA0BsF,EAA1BtF,OAAQtB,EAAkB4G,EAAlB5G,QAASmE,EAASyC,EAATzC,KACnB0B,EAAW7H,EAAM+I,SAAQ,iBAAO,CAAEhB,MAAOD,KAAU,CAACW,IACpDO,EAAYhJ,EAAM+I,SAAQ,iBAAO,CAAEhB,MAAOzE,KAAW,CAACA,IACtD2F,EAAajJ,EAAM+I,SAAQ,iBAAO,CAAEhB,MAAO/F,KAAY,CAACA,IACxDqG,EAAUrI,EAAM+I,SAAQ,iBAAO,CAAEhB,MAAO5B,KAAS,CAACA,WAGtDnG,gBAACuH,EAAuBS,UAASD,MAAOF,GACtC7H,gBAACiI,EAAcD,UAASD,MAAOiB,GAC7BhJ,gBAACkI,EAAeF,UAASD,MAAOkB,GAC9BjJ,gBAACmI,EAAYH,UAASD,MAAOM,GAC3BrI,gBAACA,EAAMkJ,UAASC,IAAKnH,EAAUA,EAAQoH,GAAK,YACzCZ,OChCf,SAASa,EAAkBvJ,OACnBgI,EAAQiB,WAAQ,iBAC2CjJ,EAAvDW,YAAAA,aAAc,KAAW8D,EAA8BzE,EAArCa,MAA4B2I,IAASxJ,kCACxD,IAAIU,EAAgBC,EAAa6I,EAAM/E,KAC7C,MAEmCoE,YAAS,GAAxCF,OAAac,cAEpBtJ,aAAU,WACH6H,EAAMtD,cAAcG,MAAK,kBAAM4E,GAAe,QAClD,IAGDvJ,gBAACoH,EAAiBY,UAASD,MAAOlB,EAAuBG,cACtDc,aAAiBtH,GAAmBsH,EAAM3E,SACzCnD,0BACEwJ,KAAK,gCACM,MACXC,wBAAyB,CAAEC,OAAQ5B,EAAM3E,WAG7CnD,gBAACuI,GAAoBG,gBAAiBZ,EAAOW,YAAaA,GACvD3I,EAAM0I,WAMf,IAAamB,EAAgBlK,EAC3B4J,EACA,gBV9BA,2IWyBIO,2FACgB5J,EAAM6J,gIAE1BC,kBAAA,WACMlJ,KAAKmJ,UAAUC,cACZlK,MAAMmK,MAAMrJ,KAAKmJ,UAAUC,QAASpJ,KAAKd,MAAMA,UAIxDoK,qBAAA,WACMtJ,KAAKmJ,UAAUC,cACZlK,MAAMqK,QAAQvJ,KAAKmJ,UAAUC,YAItCI,OAAA,kBACSpK,uBAAKqK,IAAKzJ,KAAKmJ,gBAhBL/J,EAAMsK,eAoBdC,EAAS/C,GACpB,gBAAGM,IAAAA,MAAUhI,wBAETE,gBAAC4J,GACCK,MAAOnC,EAAMtG,YACb2I,QAASrC,EAAMtF,cACf1C,MAAOA,MAIb,UAGW0K,EAAShD,GACpB,gBAAGM,IAAAA,MAAUhI,wBAETE,gBAAC4J,GACCK,MAAOnC,EAAMpG,YACbyI,QAASrC,EAAMrF,cACf3C,MAAOA,MAIb,UAGW2K,EAAcjD,GACzB,gBAAGM,IAAAA,MAAUhI,wBAETE,gBAAC4J,GACCK,MAAOnC,EAAMlG,iBACbuI,QAASrC,EAAMpF,mBACf5C,MAAOA,MAIb,eAGW4K,EAAalD,GACxB,gBAAGM,IAAAA,MAAUhI,wBAETE,gBAAC4J,GACCK,MAAOnC,EAAMhG,gBACbqI,QAASrC,EAAMnF,kBACf7C,MAAOA,MAIb,cCvGW6K,EAAqBrC,GAAS,mBAClCtI,kCADqCwI,YAE3C,YAEUoC,EAAsBpD,GAAU,gBAAGgB,IAAAA,gBAErB,OADTJ,IACDL,MAAiB/H,gCAAGwI,GAAe,OACjD,aAEUqC,EAAwBrD,GAAU,mBACtCxH,kCADyCwI,YAE/C,eAEUsC,EAAmBtD,GAAU,gBAAGM,IAAAA,MACnCxE,EAAiCwE,EAAjCxE,OAAQ8C,EAAyB0B,EAAzB1B,YAAapE,EAAY8F,EAAZ9F,QACvB+I,EACJzH,EAAO0H,gBAAkB1H,EAAO0H,eAAeC,OAAS,SAC1DjL,EAAMC,WAAU,WACE,OAAZ+B,GAAoB+I,GAAqB3E,EAEtC0B,EAAMrE,SADoB2C,EAAY8E,cAAnCC,oBAGRrD,EAAMnE,qBAEP,IACI,OACN,oBAEUyH,EAAmB5D,GAAU,gBAAGM,IAAAA,aAC3C9H,EAAMC,WAAU,WACd6H,EAAMjE,qBACL,IACI,OACN,oBAEUwH,EAAwB7D,GAAU,gBAAGM,IAAAA,aAChD9H,EAAMC,WAAU,WACd6H,EAAM/D,0BACL,IACI,OACN,mSPmCE,gBAAGyE,IAAAA,gBACNxI,gBAACoH,EAAiBkE,eACf,SAAA3D,UACC3H,gBAACuH,EAAuB+D,eACrB,SAAAzD,MACyB,mBAAbW,QACH,IAAIpI,MLrEpB,iDKwEQiG,EAA6BsB,GAC7BtB,EAA6BwB,OAEvBC,EAASD,EAASE,aACnBD,EAIDH,EAAaV,iBACRuB,EAASV,GAGdA,EAAMxE,OAENtD,gBAACoH,EAAiBY,UAChBD,MAAOlB,EAAuBI,kBAE7BuB,EAASV,IAKT,KAjBE,6BGnBd,gBAAGU,IAAAA,gBACNxI,gBAACoH,EAAiBkE,eACf,SAAA3D,UACC3H,gBAACmI,EAAYmD,eACV,SAAAjD,MACyB,mBAAbG,QACH,IAAIpI,MRhEpB,iDQmEQiG,EAA6BsB,GAC7BtB,EAA6BgC,OACvBlC,EAAOkC,EAAQN,aAEjBJ,EAAaT,gBAAkBf,EAC1BqC,EAASrC,GAGdA,EAEAnG,gBAACoH,EAAiBY,UAChBD,MAAOlB,EAAuBM,eAE7BqB,EAASrC,IAKT,6BH/EO,eAChBwB,EAAeC,aAAWR,GAC1BS,EAAWD,aAAWL,UAC5BlB,EAA6BsB,GAC7BtB,EAA6BwB,GAC7BtB,EAA2BoB,EAAaV,iBAAkB,cAC1DV,EAA2BsB,EAASE,MAAO,cAGnCF,EAASE,0BEjBnB,eACQJ,EAAeC,aAAWR,GAC1B6B,EAAajJ,EAAM4H,WAAWM,UACpC7B,EAA6B4C,GAC7B5C,EAA6BsB,GAC7BhB,EAAoBgB,EAAaT,eAAgB,gBAC1C+B,EAAWlB,8BDiBpB,eACQJ,EAAeC,aAAWR,GAC1B4B,EAAYhJ,EAAM4H,WAAWK,UACnC5B,EAA6B2C,GAC7B3C,EAA6BsB,GAC7BpB,EAA2BoB,EAAaV,iBAAkB,oBAClD+B,EAAUjB,MAAyBwD,4BAxB7C,eACQ5D,EAAeC,aAAWR,GAC1B4B,EAAYhJ,EAAM4H,WAAWK,UACnC5B,EAA6B2C,GAC7B3C,EAA6BsB,GAC7BpB,EAA2BoB,EAAaV,iBAAkB,eAClD+B,EAAUjB,MAAyByD,0BAG7C,eACQ7D,EAAeC,aAAWR,GAC1B4B,EAAYhJ,EAAM4H,WAAWK,UACnC5B,EAA6B2C,GAC7B3C,EAA6BsB,GAC7BpB,EAA2BoB,EAAaV,iBAAkB,eAClD+B,EAAUjB,MAAyB0D,wBET7C,eACQ9D,EAAeC,aAAWR,GAChCf,EAA6BsB,GAC7BhB,EAAoBgB,EAAaT,eAAgB,iBAE3CmB,EAAUD,WAChBzB,EAAoB0B,EAAQN,MAAO,aAC5BM,EAAQN"}