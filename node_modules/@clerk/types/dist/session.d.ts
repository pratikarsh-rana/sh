import { ClerkResource } from './resource';
import { UserResource } from './user';
export interface SessionResource extends ClerkResource {
    id: string;
    status: SessionStatus;
    expireAt: Date;
    abandonAt: Date;
    user: UserResource;
    end: () => Promise<SessionResource>;
    remove: () => Promise<SessionResource>;
    /**
     *  `revoke` has been deprecated and will be removed soon.
     */
    revoke: () => Promise<SessionResource>;
    touch: () => Promise<SessionResource>;
    updatedAt: Date;
}
export interface SessionWithActivitiesResource extends ClerkResource {
    id: string;
    status: string;
    expireAt: Date;
    abandonAt: Date;
    lastActiveAt: Date;
    latestActivity: SessionActivity;
    revoke: () => Promise<SessionWithActivitiesResource>;
}
export interface SessionActivity {
    id: string;
    browserName?: string;
    browserVersion?: string;
    deviceType?: string;
    ipAddress?: string;
    city?: string;
    country?: string;
    isMobile?: boolean;
}
export declare type SessionStatus = 'abandoned' | 'active' | 'ended' | 'expired' | 'removed' | 'replaced' | 'revoked';
//# sourceMappingURL=session.d.ts.map