import { ClerkResource } from './resource';
import { SnakeToCamel } from './utils';
import { VerificationAttemptParams, VerificationResource } from './verification';
export interface SignUpAttemptResource extends ClerkResource {
    status: SignUpStatus | null;
    identificationRequirements: SignUpIdentificationRequirements;
    attributeRequirements: SignUpAttributeRequirements;
    username: string | null;
    firstName: string | null;
    lastName: string | null;
    emailAddress: string | null;
    emailAddressVerification: VerificationResource;
    phoneNumber: string | null;
    phoneNumberVerification: VerificationResource;
    externalAccountStrategy: string | null;
    externalAccountVerification: VerificationResource;
    externalAccount: any;
    hasPassword: boolean;
    createdSessionId: string | null;
    abandonAt: number | null;
    create: (params: SignUpAttemptParams) => Promise<SignUpAttemptResource>;
    update: (params: SignUpAttemptParams) => Promise<SignUpAttemptResource>;
    prepareEmailAddressVerification: () => Promise<SignUpAttemptResource>;
    attemptEmailAddressVerification: (params: VerificationAttemptParams) => Promise<SignUpAttemptResource>;
    preparePhoneNumberVerification: () => Promise<SignUpAttemptResource>;
    attemptPhoneNumberVerification: (params: VerificationAttemptParams) => Promise<SignUpAttemptResource>;
    signUpWithOAuth: (frontendApi: string, callbacks: {
        callbackUrl: string;
        callbackUrlComplete: string;
    }) => void;
}
export declare type SignUpStatus = 'missing_requirements' | 'complete' | 'abandoned';
export declare type SignUpIdentification = 'email_address' | 'phone_number' | 'username' | 'oauth_google' | 'oauth_facebook';
export declare type SignUpIdentificationRequirements = SignUpIdentification[][];
export declare type SignUpAttribute = 'first_name' | 'last_name' | 'password' | 'birthday' | 'gender';
export declare type SignUpAttributeRequirements = SignUpAttribute[][];
declare type SignUpAttemptAttributes = Record<SignUpAttribute | Exclude<SignUpIdentification, 'oauth_google' | 'oauth_facebook'> | 'external_account_strategy' | 'external_account_redirect_url' | 'external_account_action_complete_redirect_url', string> & {
    transfer: boolean;
};
export declare type SignUpAttemptParams = Partial<SnakeToCamel<SignUpAttemptAttributes> & SignUpAttemptAttributes>;
export {};
//# sourceMappingURL=signUpAttempt.d.ts.map