import { OAuthCallbacks, OAuthStrategy } from './oauth';
import { ClerkResource } from './resource';
import { SnakeToCamel } from './utils';
import { VerificationAttemptParams, VerificationResource } from './verification';
export interface SignUpResource extends ClerkResource {
    status: SignUpStatus | null;
    requiredFields: SignUpField[];
    optionalFields: SignUpField[];
    missingFields: SignUpField[];
    unverifiedFields: SignUpIdentificationField[];
    supportedExternalAccounts: OAuthStrategy[];
    verifications: SignUpVerificationsResource;
    username: string | null;
    firstName: string | null;
    lastName: string | null;
    emailAddress: string | null;
    phoneNumber: string | null;
    externalAccount: any;
    hasPassword: boolean;
    unsafeMetadata: Record<string, unknown>;
    createdSessionId: string | null;
    abandonAt: number | null;
    /**
     * @deprecated `identificationRequirements` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.requiredFields} instead.
     */
    identificationRequirements: SignUpIdentificationRequirements;
    /**
     * @deprecated `attributeRequirements` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.requiredFields} and {@link SignUpResource.optionalFields} instead.
     */
    attributeRequirements: SignUpAttributeRequirements;
    /**
     * @deprecated `missingRequirements` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.missingFields} and {@link SignUpResource.unverifiedFields} instead.
     */
    missingRequirements: SignUpMissingRequirements;
    /**
     * @deprecated `emailAddressVerification` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.verifications.emailAddress} instead.
     */
    emailAddressVerification: VerificationResource;
    /**
     * @deprecated `phoneNumberVerification` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.verifications.phoneNumber} instead.
     */
    phoneNumberVerification: VerificationResource;
    /**
     * @deprecated `externalAccountStrategy` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.verifications.externalAccount.strategy} instead.
     */
    externalAccountStrategy: string | null;
    /**
     * @deprecated `missingRequirements` has been deprecated and will be removed soon.
     * Use {@link SignUpResource.verifications.externalAccount} instead.
     */
    externalAccountVerification: VerificationResource;
    create: (params: SignUpParams) => Promise<SignUpResource>;
    update: (params: SignUpParams) => Promise<SignUpResource>;
    prepareVerification: (strategy: SignUpVerificationStrategy) => Promise<SignUpResource>;
    attemptVerification: (params: SignUpVerificationAttemptParams) => Promise<SignUpResource>;
    prepareEmailAddressVerification: () => Promise<SignUpResource>;
    attemptEmailAddressVerification: (params: VerificationAttemptParams) => Promise<SignUpResource>;
    preparePhoneNumberVerification: () => Promise<SignUpResource>;
    attemptPhoneNumberVerification: (params: VerificationAttemptParams) => Promise<SignUpResource>;
    signUpWithOAuth: (strategy: OAuthStrategy, callbacks: OAuthCallbacks) => Promise<void>;
}
export declare type SignUpStatus = 'missing_requirements' | 'complete' | 'abandoned';
export declare type SignUpField = SignUpAttribute | SignUpIdentificationField;
export declare type SignUpIdentificationField = 'email_address' | 'phone_number' | 'username' | 'email_address_or_phone_number';
export declare type SignUpIdentification = SignUpIdentificationField | OAuthStrategy;
/**
 * @deprecated `SignUpIdentificationRequirements` has been deprecated and will be removed soon.
 */
export declare type SignUpIdentificationRequirements = SignUpIdentification[][];
export declare type SignUpAttribute = 'first_name' | 'last_name' | 'password' | 'birthday' | 'gender';
/**
 * @deprecated `SignUpAttributeRequirements` has been deprecated and will be removed soon.
 */
export declare type SignUpAttributeRequirements = SignUpAttribute[][];
declare type SignUpAttributes = Record<SignUpAttribute | Exclude<SignUpIdentification, OAuthStrategy> | 'external_account_strategy' | 'external_account_redirect_url' | 'external_account_action_complete_redirect_url' | 'strategy' | 'redirect_url' | 'action_complete_redirect_url' | 'unsafe_metadata', string> & {
    transfer: boolean;
};
export declare type SignUpParams = Partial<SnakeToCamel<SignUpAttributes> & SignUpAttributes>;
/**
 * @deprecated `SignUpMissingRequirements` has been deprecated and will be removed soon.
 */
export declare type SignUpMissingRequirements = SignUpRequirement[];
declare type SignUpRequirement = SignUpIdentification | SignUpAttribute;
export interface SignUpVerificationsResource {
    emailAddress: SignUpVerificationResource;
    phoneNumber: SignUpVerificationResource;
    externalAccount: VerificationResource;
}
export interface SignUpVerificationResource extends VerificationResource {
    supportedStrategies: string[];
    nextAction: string;
}
export declare type SignUpVerificationStrategy = 'email_code' | 'phone_code';
export declare type SignUpVerificationAttemptParams = {
    strategy: SignUpVerificationStrategy;
} & VerificationAttemptParams;
export {};
//# sourceMappingURL=signUp.d.ts.map