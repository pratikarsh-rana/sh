/// <reference types="qs" />
/// <reference types="express" />
import Clerk from './instance';
export { Clerk };
declare const singletonInstance: Clerk;
declare const clients: import("./apis/ClientApi").ClientApi;
declare const emails: import("./apis/EmailApi").EmailApi;
declare const sessions: import("./apis/SessionApi").SessionApi;
declare const smsMessages: import("./apis/SMSMessageApi").SMSMessageApi;
declare const users: import("./apis/UserApi").UserApi;
export default singletonInstance;
export { clients, emails, sessions, smsMessages, users };
export { Nullable, Client, Email, EmailAddress, ExternalAccount, IdentificationLink, PhoneNumber, Session, SMSMessage, User, Verification, } from './instance';
declare const ClerkExpressWithSession: ({ onError }?: import("./Clerk").MiddlewareOptions) => (req: import("express").Request<import("express-serve-static-core").ParamsDictionary, any, any, import("qs").ParsedQs, Record<string, any>>, res: import("express").Response<any, Record<string, any>>, next: import("express").NextFunction) => Promise<void>;
declare const ClerkExpressRequireSession: ({ onError }?: import("./Clerk").MiddlewareOptions) => (req: import("express").Request<import("express-serve-static-core").ParamsDictionary, any, any, import("qs").ParsedQs, Record<string, any>>, res: import("express").Response<any, Record<string, any>>, next: import("express").NextFunction) => Promise<void>;
declare const withSession: (handler: Function, { onError }?: import("./Clerk").MiddlewareOptions) => (req: import("./Clerk").WithSessionProp<import("next").NextApiRequest>, res: import("next").NextApiResponse<any>) => Promise<any>;
declare const requireSession: (handler: Function, { onError }?: import("./Clerk").MiddlewareOptions) => (req: import("./Clerk").WithSessionProp<import("next").NextApiRequest>, res: import("next").NextApiResponse<any>) => Promise<any>;
export { ClerkExpressWithSession, ClerkExpressRequireSession, withSession, requireSession, };
export { WithSessionProp, RequireSessionProp } from './instance';
export { HttpError, ClerkServerError, ClerkServerErrorJSON } from './utils/Errors';
import Logger from './utils/Logger';
export { Logger };
export declare function setClerkApiKey(value: string): void;
export declare function setClerkServerApiUrl(value: string): void;
export declare function setClerkApiVersion(value: string): void;
export declare function setClerkHttpOptions(value: object): void;
