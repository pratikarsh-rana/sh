{"version":3,"file":"clerk-sdk-node.cjs.production.min.js","sources":["../src/resources/JSON.ts","../src/resources/Enums.ts","../node_modules/regenerator-runtime/runtime.js","../src/utils/Filter.ts","../src/utils/Associations.ts","../src/resources/Session.ts","../src/resources/Client.ts","../src/resources/Email.ts","../src/resources/SMSMessage.ts","../src/resources/Verification.ts","../src/resources/IdentificationLink.ts","../src/resources/EmailAddress.ts","../src/resources/ExternalAccount.ts","../src/resources/PhoneNumber.ts","../src/utils/Logger.ts","../src/resources/User.ts","../src/utils/Deserializer.ts","../src/utils/Errors.ts","../src/utils/RestClient.ts","../src/utils/ErrorHandler.ts","../src/apis/AbstractApi.ts","../src/apis/ClientApi.ts","../src/apis/EmailApi.ts","../src/apis/SessionApi.ts","../src/apis/SMSMessageApi.ts","../src/apis/UserApi.ts","../src/Clerk.ts","../src/index.ts"],"sourcesContent":["import {\n  SignInIdentifier,\n  SignInFactorStrategy,\n  SignInStatus,\n  SignUpAttributeRequirements,\n  SignUpIdentificationRequirements,\n  SignUpStatus,\n} from './Enums';\n\nexport enum ObjectType {\n  Client = 'client',\n  Email = 'email',\n  EmailAddress = 'email_address',\n  FacebookAccount = 'facebook_account',\n  GoogleAccount = 'google_account',\n  ExternalAccount = 'external_account',\n  PhoneNumber = 'phone_number',\n  Session = 'session',\n  SignInAttempt = 'sign_in_attempt',\n  SignUpAttempt = 'sign_up_attempt',\n  SmsMessage = 'sms_message',\n  User = 'user',\n}\n\nexport interface ClerkResourceJSON {\n  object: ObjectType;\n  id: string;\n}\n\nexport interface ClientJSON extends ClerkResourceJSON {\n  object: ObjectType.Client;\n  session_ids: string[];\n  sessions: SessionJSON[];\n  sign_in_attempt_id: string | null;\n  sign_up_attempt_id: string | null;\n  last_active_session_id: string | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface EmailJSON extends ClerkResourceJSON {\n  object: ObjectType.Email;\n  from_email_name: string;\n  to_email_address: string;\n  email_address_id: string;\n  subject: string;\n  body: string;\n  status: string;\n}\n\nexport interface EmailAddressJSON extends ClerkResourceJSON {\n  object: ObjectType.EmailAddress;\n  email_address: string;\n  verification: VerificationJSON | null;\n  linked_to: Array<IdentificationLinkJSON>;\n}\n\nexport interface FacebookAccountJSON extends ClerkResourceJSON {\n  object: ObjectType.FacebookAccount;\n  facebook_id: string;\n  approved_scopes: string;\n  email_address: string;\n  first_name: string;\n  last_name: string;\n  picture: string;\n}\n\nexport interface GoogleAccountJSON extends ClerkResourceJSON {\n  object: ObjectType.GoogleAccount;\n  google_id: string;\n  approved_scopes: string;\n  email_address: string;\n  given_name: string;\n  family_name: string;\n  picture: string;\n}\n\nexport interface ExtAccountJSON extends ClerkResourceJSON {\n  object: ObjectType.ExternalAccount;\n  provider: string;\n  identification_id: string;\n  provider_user_id: string;\n  approved_scopes: string;\n  email_address: string;\n  first_name: string;\n  last_name: string;\n  avatar_url: string;\n}\n\nexport type ExternalAccountJSON = FacebookAccountJSON | GoogleAccountJSON | ExtAccountJSON;\n\nexport interface IdentificationLinkJSON extends ClerkResourceJSON {\n  type: string;\n}\n\nexport interface PhoneNumberJSON extends ClerkResourceJSON {\n  object: ObjectType.PhoneNumber;\n  phone_number: string;\n  reserved_for_second_factor: boolean;\n  linked_to: Array<IdentificationLinkJSON>;\n  verification: VerificationJSON | null;\n}\n\nexport interface SessionJSON extends ClerkResourceJSON {\n  object: ObjectType.Session;\n  client_id: string;\n  user_id: string;\n  status: string;\n  last_active_at: number;\n  expire_at: number;\n  abandon_at: number;\n}\n\nexport interface SignInJSON extends ClerkResourceJSON {\n  object: ObjectType.SignInAttempt;\n  status: SignInStatus;\n  allowed_identifier_types: SignInIdentifier[];\n  identifier: string;\n  allowed_factor_one_strategies: SignInFactorStrategy[];\n  factor_one_verification: VerificationJSON | null;\n  factor_two_verification: VerificationJSON | null;\n  created_session_id: string | null;\n}\n\nexport interface SignUpJSON extends ClerkResourceJSON {\n  object: ObjectType.SignUpAttempt;\n  status: SignUpStatus;\n  identification_requirements: SignUpIdentificationRequirements;\n  attribute_requirements: SignUpAttributeRequirements;\n  username: string | null;\n  email_address: string | null;\n  email_address_verification: VerificationJSON | null;\n  phone_number: string | null;\n  phone_number_verification: VerificationJSON | null;\n  external_account_strategy: string | null;\n  external_account_verification: VerificationJSON | null;\n  external_account: any;\n  has_password: boolean;\n  name_full: string | null;\n  created_session_id: string | null;\n  abandon_at: number | null;\n}\n\nexport interface SMSMessageJSON extends ClerkResourceJSON {\n  object: ObjectType.SmsMessage;\n  from_phone_number: string;\n  to_phone_number: string;\n  phone_number_id: string;\n  message: string;\n  status: string;\n}\n\nexport interface UserJSON extends ClerkResourceJSON {\n  object: ObjectType.User;\n  username: string;\n  first_name: string;\n  last_name: string;\n  gender: string;\n  birthday: string;\n  profile_image_url: string;\n  primary_email_address_id: string;\n  primary_phone_number_id: string;\n  password_enabled: boolean;\n  two_factor_enabled: boolean;\n  email_addresses: EmailAddressJSON[];\n  phone_numbers: PhoneNumberJSON[];\n  external_accounts: GoogleAccountJSON[];\n  public_metadata: Record<string, unknown>;\n  private_metadata: Record<string, unknown>;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface VerificationJSON extends ClerkResourceJSON {\n  status: string;\n  strategy: string;\n  external_verification_redirect_url: string;\n  attempts: number;\n  expire_at: number;\n}\n","export enum Association {\n    HasOne = 'HasOne',\n    HasMany = 'HasMany',\n}\n\nexport type SignInIdentifier =\n    | 'username'\n    | 'email_address'\n    | 'phone_number'\n    | 'oauth_google'\n    | 'oauth_facebook';\n\nexport type SignInFactorStrategy =\n    | 'password'\n    | 'oauth_google'\n    | 'oauth_facebook'\n    | 'phone_code'\n    | 'email_code';\n\nexport type SignInStatus =\n    | 'needs_identifier'\n    | 'needs_factor_one'\n    | 'needs_factor_two'\n    | 'complete';\n\nexport type SignUpStatus = 'missing_requirements' | 'complete' | 'abandoned';\n\nexport type SignUpIdentificationRequirements = (\n    | 'email_address'\n    | 'phone_number'\n    | 'username'\n    | 'oauth_google'\n    | 'oauth_facebook'\n    )[][];\n\nexport type SignUpAttributeRequirements = (\n    | 'name_title'\n    | 'name_middle'\n    | 'name_last'\n    | 'name_suffix'\n    | 'age'\n    | 'gender'\n    )[][];\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function filterKeys(\n  data: Record<string, any>,\n  allowedKeys: Array<string>\n) {\n  return Object.keys(data)\n    .filter(key => allowedKeys.includes(key))\n    .reduce((obj, key) => {\n      obj[key] = data[key];\n      return obj;\n    }, {} as Record<string, any>);\n}\n","import { Association } from '../resources/Enums';\n\nexport default function associationDefaults(associations: object) {\n  return Object.entries(associations).reduce((obj, [k, v]) => {\n    if (v == Association.HasMany) {\n      obj[k] = [];\n    }\n    return obj;\n  }, {} as Record<string, any>);\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\n\nimport type { SessionJSON } from './JSON';\nimport { SessionProps } from './Props';\n\ninterface SessionPayload extends SessionProps {};\n\nexport interface Session extends SessionPayload {};\n\nexport class Session {\n  static attributes = ['id', 'clientId', 'userId', 'status', 'lastActiveAt',\n    'expireAt', 'abandonAt'];\n\n  static defaults = {};\n\n  constructor(data: Partial<SessionPayload> = {}) {    \n    Object.assign(this, Session.defaults, data);\n  }\n\n  static fromJSON(data: SessionJSON): Session {\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, Session.attributes);\n    return new Session(filtered as SessionPayload);\n  }\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\nimport associationDefaults from \"../utils/Associations\";\n\nimport { Association } from \"./Enums\";\nimport type { ClientJSON } from './JSON';\nimport type { ClientProps } from './Props';\n\nimport { Session } from \"./Session\";\n\ninterface ClientAssociations {\n  sessions: Session[];\n}\n\ninterface ClientPayload extends ClientProps, ClientAssociations {};\n\nexport interface Client extends ClientPayload {};\n\nexport class Client {\n  static attributes = ['id', 'sessionIds', 'signUpAttemptId', 'signInAttemptId',\n    'lastActiveSessionId', 'createdAt', 'updatedAt'];\n\n  static associations = {\n    sessions: Association.HasMany\n  };\n\n  static defaults = {\n    ...associationDefaults(Client.associations)\n  };\n\n  constructor(data: Partial<ClientPayload> = {}) {\n    Object.assign(this, Client.defaults, data);\n  }\n\n  static fromJSON(data: ClientJSON): Client {\n    const obj: Record<string, any> = {};\n\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, Client.attributes);\n    Object.assign(obj, filtered);\n\n    obj.sessions = (data.sessions || []).map((x) => Session.fromJSON(x));\n\n    return new Client(obj as ClientPayload);\n  }\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\n\nimport type { EmailJSON } from './JSON';\nimport type { EmailProps } from './Props';\n\ninterface EmailPayload extends EmailProps {};\n\nexport interface Email extends EmailPayload {};\n\nexport class Email {\n  static attributes = ['id', 'fromEmailName', 'toEmailAddress', 'emailAddressId',\n    'subject', 'body', 'status'];\n\n  static defaults = {};\n\n  constructor(data: Partial<EmailPayload> = {}) {\n    Object.assign(this, Email.defaults, data);\n  }\n\n  static fromJSON(data: EmailJSON): Email {\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, Email.attributes);\n    return new Email(filtered as EmailPayload);\n  }\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\n\nimport type { SMSMessageJSON } from './JSON';\nimport type { SMSMessageProps } from './Props';\n\ninterface SMSMessagePayload extends SMSMessageProps {};\n\nexport interface SMSMessage extends SMSMessagePayload {};\n\nexport class SMSMessage {\n  static attributes = ['id', 'fromPhoneNumber', 'toPhoneNumber',\n    'phoneNumberId', 'message', 'status'];\n\n  static defaults = {};\n\n  constructor(data: Partial<SMSMessagePayload> = {}) {\n    Object.assign(this, SMSMessage.defaults, data);\n  }\n\n  static fromJSON(data: SMSMessageJSON): SMSMessage {\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, SMSMessage.attributes);\n    return new SMSMessage(filtered as SMSMessagePayload);\n  }\n}\n","import type { VerificationJSON } from './JSON';\nimport type { VerificationProps } from './Props';\n\ninterface VerificationPayload extends VerificationProps {}\n\nexport interface Verification extends VerificationPayload {};\n\nexport class Verification {\n  static attributes = ['status', 'strategy', 'externalVerificationRedirectURL', 'attempts', 'expireAt'];\n\n  static defaults = {};\n\n  constructor(data: Partial<VerificationPayload> = {}) {\n    Object.assign(this, Verification.defaults, data);\n  }\n\n  static fromJSON(data: VerificationJSON | null): Verification {\n    const obj: Record<string, any> = {};\n\n    if (data) {\n      obj.status = data.status;\n      obj.strategy = data.strategy;\n\n      if (data.external_verification_redirect_url) {\n        obj.externalVerificationRedirectURL = new URL(\n          data.external_verification_redirect_url\n        );\n      } else {\n        obj.externalVerificationRedirectURL = null;\n      }\n      obj.attempts = data.attempts;\n      obj.expireAt = data.expire_at;\n    } else {\n      obj.status = null;\n      obj.strategy = null;\n      obj.externalVerificationRedirectURL = null;\n      obj.attempts = null;\n      obj.expireAt = null;\n    }\n\n    return new Verification(obj as VerificationPayload);\n  }\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\n\nimport type { IdentificationLinkJSON } from './JSON';\nimport type { IdentificationLinkProps } from './Props';\n\ninterface IdentificationLinkPayload extends IdentificationLinkProps {};\n\nexport interface IdentificationLink extends IdentificationLinkPayload {};\n\nexport class IdentificationLink {\n  static attributes = ['id', 'type'];\n\n  static defaults = {};\n\n  constructor(data: Partial<IdentificationLinkPayload> = {}) {\n    Object.assign(this, IdentificationLink.defaults, data);\n  }\n\n  static fromJSON(data: IdentificationLinkJSON): IdentificationLink {\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, IdentificationLink.attributes);\n    return new IdentificationLink(filtered as IdentificationLinkPayload);\n  }\n}\n","import associationDefaults from '../utils/Associations';\n\nimport { Association } from './Enums';\nimport type { Nullable } from './Nullable';\nimport type { EmailAddressJSON } from './JSON';\nimport type { EmailAddressProps } from './Props';\n\nimport { Verification } from './Verification';\nimport { IdentificationLink } from './IdentificationLink';\n\ninterface EmailAddressAssociations {\n  verification: Nullable<Verification>,\n  linkedTo: IdentificationLink[]\n}\n\ninterface EmailAddressPayload extends EmailAddressProps, EmailAddressAssociations {};\n\nexport interface EmailAddress extends EmailAddressPayload {};\n\nexport class EmailAddress {\n  static attributes = ['id', 'emailAddress'];\n\n  static associations = {\n    verification: Association.HasOne,\n    linkedTo: Association.HasMany\n  };\n\n  static defaults = associationDefaults(EmailAddress.associations);\n\n  constructor(data: Partial<EmailAddressPayload> = {}) {\n    Object.assign(this, EmailAddress.defaults, data);\n  }\n\n  static fromJSON(data: EmailAddressJSON): EmailAddress {\n    return new EmailAddress({\n      id: data.id,\n      emailAddress: data.email_address,\n      verification: Verification.fromJSON(data.verification),\n      linkedTo: (data.linked_to || []).map((link) => { return IdentificationLink.fromJSON(link); })\n    });\n  }\n}\n","import type { ExternalAccountJSON, FacebookAccountJSON, GoogleAccountJSON, ExtAccountJSON } from './JSON';\nimport { ObjectType } from './JSON';\n\nimport type { ExternalAccountProps } from './Props';\n\ninterface ExternalAccountPayload extends ExternalAccountProps {};\n\nexport interface ExternalAccount extends ExternalAccountPayload {};\n\nexport class ExternalAccount {\n    static attributes = ['id', 'provider', 'externalId', 'approvedScopes',\n        'emailAddress', 'firstName', 'lastName', 'picture'];\n\n    static defaults = {};\n\n    constructor(data: Partial<ExternalAccountPayload> = {}) {\n        Object.assign(this, ExternalAccount.defaults, data);\n    }\n\n    static fromJSON(data: ExternalAccountJSON): ExternalAccount {\n        const obj = {} as ExternalAccountPayload;\n\n        obj.id = data.id;\n        obj.approvedScopes = data.approved_scopes;\n        obj.emailAddress = data.email_address;\n\n        switch (data.object) {\n            case ObjectType.FacebookAccount: {\n                obj.provider = 'facebook';\n                const fbData = data as FacebookAccountJSON;\n                obj.externalId = fbData.facebook_id;\n                obj.firstName = fbData.first_name;\n                obj.lastName = fbData.last_name;\n                obj.picture = data.picture;\n                break;\n            }\n            case ObjectType.GoogleAccount: {\n                obj.provider = 'google';\n                const gData = data as GoogleAccountJSON;\n                obj.externalId = gData.google_id;\n                obj.firstName = gData.given_name;\n                obj.lastName = gData.family_name;\n                obj.picture = data.picture;\n                break;\n            }\n            case ObjectType.ExternalAccount: {\n                obj.provider = data.provider;\n                const extData = data as ExtAccountJSON;\n                obj.externalId = extData.provider_user_id;\n                obj.firstName = extData.first_name;\n                obj.lastName = extData.last_name;\n                obj.picture = extData.avatar_url;\n                break;\n            }\n            default:\n                throw new Error('Unsupported external account type');\n        }\n\n        return new ExternalAccount(obj);\n    }\n}\n","import associationDefaults from '../utils/Associations';\n\nimport { Association } from './Enums';\nimport type { Nullable } from './Nullable';\nimport type { PhoneNumberJSON, IdentificationLinkJSON } from './JSON';\nimport type { PhoneNumberProps } from './Props';\n\nimport { Verification } from './Verification';\nimport { IdentificationLink } from './IdentificationLink';\n\ninterface PhoneNumberAssociations {\n  verification: Nullable<Verification>,\n  linkedTo: IdentificationLink[]\n}\n\ninterface PhoneNumberPayload extends PhoneNumberProps, PhoneNumberAssociations {};\n\nexport interface PhoneNumber extends PhoneNumberPayload {};\n\nexport class PhoneNumber {\n  static attributes = ['id', 'phoneNumber', 'reservedForSecondFactor'];\n\n  static associations = {\n    verification: Association.HasOne,\n    linkedTo: Association.HasMany\n  };\n\n  static defaults = associationDefaults(PhoneNumber.associations);\n\n  constructor(data: Partial<PhoneNumberPayload> = {}) {\n    Object.assign(this, PhoneNumber.defaults, data);\n  }\n  \n  static fromJSON(data: PhoneNumberJSON): PhoneNumber {\n    return new PhoneNumber({\n      id: data.id,\n      phoneNumber: data.phone_number,\n      reservedForSecondFactor: data.reserved_for_second_factor,\n      verification: Verification.fromJSON(data.verification),\n      linkedTo: (data.linked_to || []).map((link: IdentificationLinkJSON) => { return IdentificationLink.fromJSON(link); })\n    });\n  }\n}\n","// TODO use EventEmitter for an async Logger instead\n// TODO support more than just console output\n\nenum LogLevel {\n  Info = 'INFO',\n  Debug = 'DEBUG',\n  Warn = 'WARN',\n  Error = 'ERROR',\n}\n\ntype LogMessage = {\n  level: LogLevel;\n  timestamp: string;\n  message: string;\n};\n\nexport default class Logger {\n  public static info(msg: string): void {\n    Logger.log(LogLevel.Info, msg);\n  }\n\n  public static debug(msg: string): void {\n    Logger.log(LogLevel.Debug, msg);\n  }\n\n  public static warn(msg: string): void {\n    Logger.log(LogLevel.Warn, msg);\n  }\n\n  public static error(msg: string): void {\n    Logger.log(LogLevel.Error, msg);\n  }\n\n  private static log(logLevel: LogLevel, msg: string): void {\n    if (process.env.CLERK_LOGGING == 'true') {\n      const logMessage: LogMessage = {\n        timestamp: new Date().toISOString(),\n        level: logLevel,\n        message: msg,\n      };\n\n      // @ts-ignore\n      console[logLevel.toLowerCase()](logMessage);\n    }\n  }\n}\n","import camelcaseKeys from 'camelcase-keys';\nimport filterKeys from '../utils/Filter';\nimport associationDefaults from '../utils/Associations';\n\nimport { Association } from './Enums';\nimport type {ExternalAccountJSON, UserJSON} from './JSON';\nimport type { UserProps } from './Props';\n\nimport { EmailAddress } from './EmailAddress';\nimport { ExternalAccount } from './ExternalAccount';\nimport { PhoneNumber } from './PhoneNumber';\n\ninterface UserAssociations {\n  emailAddresses: EmailAddress[];\n  phoneNumbers: PhoneNumber[];\n  externalAccounts: ExternalAccount[];\n}\n\ninterface UserPayload extends UserProps, UserAssociations {};\n\nexport interface User extends UserPayload {};\n\nexport class User {\n  static attributes = ['id', 'username', 'firstName', 'lastName', 'gender', 'birthday',\n    'profileImageUrl', 'primaryEmailAddressId', 'primaryEmailAddressId', 'primaryPhoneNumberId',\n    'passwordEnabled', 'twoFactorEnabled', 'passwordEnabled', 'passwordEnabled', 'passwordEnabled',\n    'twoFactorEnabled', 'publicMetadata', 'privateMetadata', 'createdAt', 'updatedAt'];\n  \n  static associations = {\n    emailAddresses: Association.HasMany,\n    phoneNumbers: Association.HasMany,\n    externalAccounts: Association.HasMany\n  };\n\n  static defaults = {\n    publicMetadata: {},\n    privateMetadata: {},\n    ...associationDefaults(User.associations)\n  }\n\n  constructor(data: Partial<UserPayload> = {}) {\n    Object.assign(this, User.defaults, data);\n  }\n\n  static fromJSON(data: UserJSON): User {\n    const obj: Record<string, any> = {};\n\n    const camelcased = camelcaseKeys(data);\n    const filtered = filterKeys(camelcased, User.attributes);\n    Object.assign(obj, filtered);\n\n    obj.emailAddresses = (data.email_addresses || []).map((x) => EmailAddress.fromJSON(x));\n    obj.phoneNumbers = (data.phone_numbers || []).map((x) => PhoneNumber.fromJSON(x));\n\n    obj.externalAccounts = (data.external_accounts || []).map(\n      (x: ExternalAccountJSON) => ExternalAccount.fromJSON(x)\n    );\n\n    return new User(obj as UserPayload);\n  }\n}\n","import { ObjectType } from '../resources/JSON';\nimport { Client } from '../resources/Client';\nimport { Email } from '../resources/Email';\nimport { Session } from '../resources/Session';\nimport { SMSMessage } from '../resources/SMSMessage';\nimport { User } from '../resources/User';\nimport Logger from './Logger';\n\n// FIXME don't return any\nexport default function deserialize(data: any): any {\n  if (Array.isArray(data)) {\n    return data.map(item => jsonToObject(item));\n  } else {\n    return jsonToObject(data);\n  }\n}\n\n// FIXME don't return any\n// item must have 'object' key\nfunction jsonToObject(item: any): any {\n  switch (item.object) {\n    case ObjectType.Client:\n      return Client.fromJSON(item);\n    case ObjectType.Email:\n      return Email.fromJSON(item);\n    case ObjectType.User:\n      return User.fromJSON(item);\n    case ObjectType.Session:\n      return Session.fromJSON(item);\n    case ObjectType.SmsMessage:\n      return SMSMessage.fromJSON(item);\n    default:\n      Logger.error(`Unexpected object type: ${item.object}`);\n  }\n}\n","export class HttpError extends Error {\n  public statusCode: number;\n  public data: unknown;\n\n  constructor(statusCode: number, message: string, data: unknown) {\n    super(message);\n    this.statusCode = statusCode;\n    this.data = data;\n  }\n}\n\nexport interface ClerkServerErrorProps {\n  message: string;\n  longMessage: string;\n  code: string;\n}\n\nexport interface ClerkServerErrorJSON {\n  message: string;\n  long_message: string;\n  code: string;\n}\n\nexport class ClerkServerError {\n  public message: string;\n  public longMessage: string;\n  public code: string;\n\n  constructor(data: ClerkServerErrorProps) {\n    this.message = data.message;\n    this.longMessage = data.longMessage;\n    this.code = data.code;\n  }\n\n  static fromJSON(data: ClerkServerErrorJSON) {\n    return new ClerkServerError({\n      message: data.message,\n      longMessage: data.long_message,\n      code: data.code\n    });\n  }\n}\n","import got, { HTTPAlias } from 'got';\nimport deserialize from './Deserializer';\nimport handleError from './ErrorHandler';\nimport snakecaseKeys from 'snakecase-keys';\nimport * as querystring from 'querystring';\n\nconst packageName = '@clerk/clerk-sdk-node'; // TODO get from package.json\nconst packageVersion = '0.5.1'; // TODO get from package.json\nconst packageRepo = 'https://github.com/clerkinc/clerk-sdk-node';\nconst userAgent = `${packageName}/${packageVersion} (${packageRepo})`;\nconst contentType = 'application/x-www-form-urlencoded';\n\ntype RequestOptions = {\n  method: HTTPAlias;\n  path: string;\n  queryParams?: object;\n  bodyParams?: object;\n};\n\nexport default class RestClient {\n  apiKey: string;\n  serverApiUrl: string;\n  apiVersion: string;\n  httpOptions?: object;\n\n  constructor(\n    apiKey: string,\n    serverApiUrl: string,\n    apiVersion: string,\n    httpOptions?: object\n  ) {\n    this.apiKey = apiKey;\n    this.serverApiUrl = serverApiUrl;\n    this.apiVersion = apiVersion;\n    this.httpOptions = httpOptions || {};\n  }\n\n  makeRequest(requestOptions: RequestOptions) {\n    let url = `${this.serverApiUrl}/${this.apiVersion}${requestOptions.path}`;\n\n    if (requestOptions.queryParams) {\n      url = `${url}?${querystring.stringify(\n        snakecaseKeys(requestOptions.queryParams)\n      )}`;\n    }\n\n    // FIXME remove 'any'\n    const gotOptions: any = {\n      method: requestOptions.method,\n      responseType: 'json' as 'json',\n      headers: {\n        Authorization: `Bearer ${this.apiKey}`,\n        'Content-type': contentType,\n        'user-agent': userAgent,\n      },\n      ...this.httpOptions,\n    };\n\n    if (requestOptions.bodyParams) {\n      gotOptions['form'] = snakecaseKeys(requestOptions.bodyParams);\n    }\n\n    // TODO improve error handling\n    return got(url, gotOptions)\n      .then(data => deserialize(data.body))\n      .catch(error => handleError(error));\n  }\n}\n","import { HttpError, ClerkServerError, ClerkServerErrorJSON } from './Errors';\n\nexport default function handleError(error: any): never {\n  const statusCode = error?.response?.statusCode || 500;\n  const message = error.message || '';\n  const body = error?.response?.body;\n  let data;\n\n  if (body && body.errors) {\n    data = (body.errors || []).map((errorJSON: ClerkServerErrorJSON) => {\n      return ClerkServerError.fromJSON(errorJSON);\n    });\n  } else {\n    data = body;\n  }\n\n  throw new HttpError(statusCode, message, data);\n}\n","import RestClient from '../utils/RestClient';\n\nexport abstract class AbstractApi {\n  protected _restClient: RestClient;\n\n  constructor(restClient: RestClient) {\n    this._restClient = restClient;\n  }\n}\n","import { AbstractApi } from './AbstractApi';\nimport { Client } from '../resources/Client';\n\nexport class ClientApi extends AbstractApi {\n  public async getClientList(): Promise<Array<Client>> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: '/clients',\n    });\n  }\n\n  public async getClient(clientId: string): Promise<Client> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: `/clients/${clientId}`,\n    });\n  }\n\n  public verifyClient(token: string): Promise<Client> {\n    return this._restClient.makeRequest({\n      method: 'post',\n      path: '/clients/verify',\n      bodyParams: { token },\n    });\n  }\n}\n","import { AbstractApi } from './AbstractApi';\nimport { Email } from '../resources/Email';\n\ntype EmailParams = {\n  fromEmailName: string;\n  emailAddressId: string;\n  subject: string;\n  body: string;\n};\nexport class EmailApi extends AbstractApi {\n  public async createEmail(params: EmailParams): Promise<Email> {\n    return this._restClient.makeRequest({\n      method: 'post',\n      path: '/emails',\n      bodyParams: params,\n    });\n  }\n}\n","import { AbstractApi } from './AbstractApi';\nimport { Session } from '../resources/Session';\n\ntype QueryParams = {\n  clientId?: string;\n  userId?: string;\n};\n\nexport class SessionApi extends AbstractApi {\n  public async getSessionList(\n    queryParams?: QueryParams\n  ): Promise<Array<Session>> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: '/sessions',\n      queryParams: queryParams,\n    });\n  }\n\n  public async getSession(sessionId: string): Promise<Session> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: `/sessions/${sessionId}`,\n    });\n  }\n\n  public async revokeSession(sessionId: string): Promise<Session> {\n    return this._restClient.makeRequest({\n      method: 'post',\n      path: `/sessions/${sessionId}/revoke`,\n    });\n  }\n\n  public async verifySession(\n    sessionId: string,\n    token: string\n  ): Promise<Session> {\n    return this._restClient.makeRequest({\n      method: 'post',\n      path: `/sessions/${sessionId}/verify`,\n      bodyParams: { token },\n    });\n  }\n}\n","import { AbstractApi } from './AbstractApi';\nimport { SMSMessage } from '../resources/SMSMessage';\n\ntype SMSParams = {\n  phoneNumberId: string;\n  message: string;\n};\n\nexport class SMSMessageApi extends AbstractApi {\n  public async createSMSMessage(params: SMSParams): Promise<SMSMessage> {\n    return this._restClient.makeRequest({\n      method: 'post',\n      path: '/sms_messages',\n      bodyParams: params,\n    });\n  }\n}\n","import { AbstractApi } from './AbstractApi';\nimport { User } from '../resources/User';\n\ninterface UserParams {\n  firstName?: string;\n  lastName?: string;\n  password?: string;\n  primaryEmailAddressID?: string;\n  primaryPhoneNumberID?: string;\n  publicMetadata?: Record<string, unknown> | string;\n  privateMetadata?: Record<string, unknown> | string;\n}\n\ninterface UserListParams {\n  limit?: number;\n  offset?: number;\n  emailAddress?: string[];\n  phoneNumber?: string[];\n}\n\nexport class UserApi extends AbstractApi {\n  public async getUserList(params: UserListParams = {}): Promise<Array<User>> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: '/users',\n      queryParams: params,\n    });\n  }\n\n  public async getUser(userId: string): Promise<User> {\n    return this._restClient.makeRequest({\n      method: 'get',\n      path: `/users/${userId}`,\n    });\n  }\n\n  public async updateUser(\n    userId: string,\n    params: UserParams = {}\n  ): Promise<User> {\n    // The Clerk server API requires metadata fields to be stringified\n\n    if (params.publicMetadata && !(typeof params.publicMetadata == 'string')) {\n      params.publicMetadata = JSON.stringify(params.publicMetadata);\n    }\n\n    if (params.privateMetadata && !(typeof params.privateMetadata == 'string')) {\n      params.privateMetadata = JSON.stringify(params.privateMetadata);\n    }\n\n    return this._restClient.makeRequest({\n      method: 'patch',\n      path: `/users/${userId}`,\n      bodyParams: params,\n    });\n  }\n\n  public async deleteUser(userId: string): Promise<User> {\n    return this._restClient.makeRequest({\n      method: 'delete',\n      path: `/users/${userId}`,\n    });\n  }\n}\n","﻿// libs\nimport type { Request, Response, NextFunction } from 'express';\nimport type { NextApiRequest, NextApiResponse } from 'next';\nimport Cookies from 'cookies';\n\n// utils\nimport RestClient from './utils/RestClient';\nimport Logger from './utils/Logger';\n\n// sub-apis\nimport { ClientApi } from './apis/ClientApi';\nimport { EmailApi } from './apis/EmailApi';\nimport { SessionApi } from './apis/SessionApi';\nimport { SMSMessageApi } from './apis/SMSMessageApi';\nimport { UserApi } from './apis/UserApi';\n\n// resources\nimport { Session } from './resources/Session';\n\nimport { HttpError, ClerkServerError } from './utils/Errors';\n\nconst defaultApiKey = process.env.CLERK_API_KEY || '';\nconst defaultApiVersion = process.env.CLERK_API_VERSION || 'v1';\nconst defaultServerApiUrl =\n  process.env.CLERK_API_URL || 'https://api.clerk.dev';\n\nexport type MiddlewareOptions = {\n  onError?: Function;\n};\n\nexport type WithSessionProp<T> = T & { session?: Session };\nexport type RequireSessionProp<T> = T & { session: Session };\n\nexport default class Clerk {\n  private _restClient: RestClient;\n\n  // singleton instance\n  static _instance: Clerk;\n\n  // TODO we may not need to instantiate these any more if they keep no state\n  // private api instances\n  private _clientApi?: ClientApi;\n  private _emailApi?: EmailApi;\n  private _sessionApi?: SessionApi;\n  private _smsMessageApi?: SMSMessageApi;\n  private _userApi?: UserApi;\n\n  constructor({\n    apiKey = defaultApiKey,\n    serverApiUrl = defaultServerApiUrl,\n    apiVersion = defaultApiVersion,\n    httpOptions = {},\n  }: {\n    apiKey?: string;\n    serverApiUrl?: string;\n    apiVersion?: string;\n    httpOptions?: object;\n  } = {}) {\n    this._restClient = new RestClient(\n      apiKey,\n      serverApiUrl,\n      apiVersion,\n      httpOptions\n    );\n  }\n\n  // For use as singleton, always returns the same instance\n  static getInstance(): Clerk {\n    if (!this._instance) {\n      this._instance = new Clerk();\n    }\n\n    return this._instance;\n  }\n\n  // Setters for the embedded rest client\n\n  set apiKey(value: string) {\n    this._restClient.apiKey = value;\n  }\n\n  set serverApiUrl(value: string) {\n    this._restClient.serverApiUrl = value;\n  }\n\n  set apiVersion(value: string) {\n    this._restClient.apiVersion = value;\n  }\n\n  set httpOptions(value: object) {\n    this._restClient.httpOptions = value;\n  }\n\n  // Lazy sub-api getters\n\n  get clients(): ClientApi {\n    if (!this._clientApi) {\n      this._clientApi = new ClientApi(this._restClient);\n    }\n\n    return this._clientApi;\n  }\n\n  get emails(): EmailApi {\n    if (!this._emailApi) {\n      this._emailApi = new EmailApi(this._restClient);\n    }\n\n    return this._emailApi;\n  }\n\n  get sessions(): SessionApi {\n    if (!this._sessionApi) {\n      this._sessionApi = new SessionApi(this._restClient);\n    }\n\n    return this._sessionApi;\n  }\n\n  get smsMessages(): SMSMessageApi {\n    if (!this._smsMessageApi) {\n      this._smsMessageApi = new SMSMessageApi(this._restClient);\n    }\n\n    return this._smsMessageApi;\n  }\n\n  get users(): UserApi {\n    if (!this._userApi) {\n      this._userApi = new UserApi(this._restClient);\n    }\n\n    return this._userApi;\n  }\n\n  // Middlewares\n\n  // defaultOnError swallows the error\n  defaultOnError(error: Error & { data: any }) {\n    Logger.warn(error.message);\n\n    (error.data || []).forEach((serverError: ClerkServerError) => {\n      Logger.warn(serverError.longMessage);\n    });\n  }\n\n  // strictOnError returns the error so that Express will halt the request chain\n  strictOnError(error: Error & { data: any }) {\n    Logger.error(error.message);\n\n    (error.data || []).forEach((serverError: ClerkServerError) => {\n      Logger.error(serverError.longMessage);\n    });\n\n    return error;\n  }\n\n  expressWithSession({ onError }: MiddlewareOptions = { onError: this.defaultOnError }): (req: Request, res: Response, next: NextFunction) => Promise<void> {\n    async function authenticate(\n      this: Clerk,\n      req: Request,\n      res: Response,\n      next: NextFunction\n    ) {\n      const cookies = new Cookies(req, res);\n\n      try {\n        const sessionToken = cookies.get('__session');\n\n        Logger.debug(`sessionToken: ${sessionToken}`);\n\n        if (!sessionToken) {\n          throw new HttpError(401, 'No session cookie found', undefined)\n        }\n\n        let sessionId: any = req.query._clerk_session_id;\n\n        Logger.debug(`sessionId from query: ${sessionId}`);\n\n        let session: (Session | undefined) = undefined;\n        if (!sessionId) {\n          const client = await this.clients.verifyClient(sessionToken);\n          session = client.sessions.find(session => session.id === client.lastActiveSessionId);\n          Logger.debug(`active session from client ${client.id}: ${session?.id}`);\n        } else {\n          session = await this.sessions.verifySession(\n              sessionId,\n              sessionToken\n          );\n          Logger.debug(`active session from session id ${sessionId}: ${session}`);\n        }\n\n        // Set Clerk session on request\n        // TBD Set on state / locals instead?\n        // @ts-ignore\n        req.session = session;\n\n        next();\n      } catch (error) {\n        // Session will not be set on request\n\n        // Call onError if provided\n        if (!onError) {\n          return next();\n        }\n\n        const err = await onError(error);\n\n        if (err) {\n          next(err);\n        } else {\n          next();\n        }\n      }\n    }\n\n    return authenticate.bind(this);\n  }\n\n  expressRequireSession({ onError }: MiddlewareOptions = { onError: this.strictOnError }) {\n    return this.expressWithSession({ onError });\n  }\n\n  // Credits to https://nextjs.org/docs/api-routes/api-middlewares\n  // Helper method to wait for a middleware to execute before continuing\n  // And to throw an error when an error happens in a middleware\n  // @ts-ignore\n  private _runMiddleware(req, res, fn) {\n    return new Promise((resolve, reject) => {\n      // @ts-ignore\n      fn(req, res, (result) => {\n        if (result instanceof Error) {\n          return reject(result);\n        }\n\n        return resolve(result);\n      });\n    });\n  }\n\n  // Set the session on the request and then call provided handler\n  withSession(handler: Function, { onError }: MiddlewareOptions = { onError: this.defaultOnError }) {\n    return async (\n      req: WithSessionProp<NextApiRequest>,\n      res: NextApiResponse\n    ) => {\n      try {\n        await this._runMiddleware(req, res, this.expressWithSession({ onError }));\n        return handler(req, res);\n      } catch (error) {\n        res.statusCode = error.statusCode || 401;\n        res.json(error.data || { error: error.message });\n        res.end();\n      }\n    };\n  }\n\n  // Stricter version, short-circuits if session can't be determined\n  requireSession(handler: Function, { onError }: MiddlewareOptions = { onError: this.strictOnError }) {\n    return this.withSession(handler, { onError })\n  }\n}\n","import Clerk from './instance';\n\n// Export as a named export in case the dev wishes to create Clerk instances as well\nexport { Clerk };\n\nconst singletonInstance = Clerk.getInstance();\nconst clients = singletonInstance.clients;\nconst emails = singletonInstance.emails;\nconst sessions = singletonInstance.sessions;\nconst smsMessages = singletonInstance.smsMessages;\nconst users = singletonInstance.users;\n\n// Export a default singleton instance that should suffice for most use cases\nexport default singletonInstance;\n\n// Export sub-api objects\nexport { clients, emails, sessions, smsMessages, users };\n\n// Export resources\nexport {\n  Nullable,\n  Client,\n  Email,\n  EmailAddress,\n  ExternalAccount,\n  IdentificationLink,\n  PhoneNumber,\n  Session,\n  SMSMessage,\n  User,\n  Verification,\n} from './instance';\n\n// Export middleware functions\nconst ClerkExpressWithSession = singletonInstance.expressWithSession.bind(\n  singletonInstance\n);\nconst ClerkExpressRequireSession = singletonInstance.expressRequireSession.bind(\n  singletonInstance\n);\nconst withSession = singletonInstance.withSession.bind(singletonInstance);\nconst requireSession = singletonInstance.requireSession.bind(singletonInstance);\nexport {\n  ClerkExpressWithSession,\n  ClerkExpressRequireSession,\n  withSession,\n  requireSession,\n};\n\n// Export wrapper types for Next.js requests\nexport { WithSessionProp, RequireSessionProp } from './instance';\n\n// Export Errors\nexport { HttpError, ClerkServerError, ClerkServerErrorJSON } from './utils/Errors';\n\n// Export Logger\nimport Logger from './utils/Logger';\nexport { Logger };\n\n// Export setters for the default singleton instance\n// Useful if you only have access to a sub-api instance\n\nexport function setClerkApiKey(value: string) {\n  Clerk.getInstance().apiKey = value;\n}\n\nexport function setClerkServerApiUrl(value: string) {\n  Clerk.getInstance().serverApiUrl = value;\n}\n\nexport function setClerkApiVersion(value: string) {\n  Clerk.getInstance().apiVersion = value;\n}\n\nexport function setClerkHttpOptions(value: object) {\n  Clerk.getInstance().httpOptions = value;\n}\n"],"names":["ObjectType","Association","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","filterKeys","data","allowedKeys","filter","includes","reduce","associationDefaults","associations","entries","HasMany","Session","assign","defaults","fromJSON","camelcaseKeys","attributes","Client","filtered","sessions","map","x","Email","SMSMessage","Verification","status","strategy","externalVerificationRedirectURL","external_verification_redirect_url","URL","attempts","expireAt","expire_at","IdentificationLink","EmailAddress","id","emailAddress","email_address","verification","linkedTo","linked_to","link","HasOne","ExternalAccount","approvedScopes","approved_scopes","FacebookAccount","provider","fbData","externalId","facebook_id","firstName","first_name","lastName","last_name","picture","GoogleAccount","gData","google_id","given_name","family_name","extData","provider_user_id","avatar_url","PhoneNumber","phoneNumber","phone_number","reservedForSecondFactor","reserved_for_second_factor","LogLevel","User","emailAddresses","email_addresses","phoneNumbers","phone_numbers","externalAccounts","external_accounts","publicMetadata","privateMetadata","Logger","msg","log","Info","debug","Debug","warn","Warn","logLevel","process","env","CLERK_LOGGING","logMessage","timestamp","Date","toISOString","level","message","console","toLowerCase","jsonToObject","item","SmsMessage","HttpError","statusCode","ClerkServerError","longMessage","code","long_message","RestClient","apiKey","serverApiUrl","apiVersion","httpOptions","makeRequest","requestOptions","url","path","queryParams","querystring","snakecaseKeys","gotOptions","responseType","headers","Authorization","packageName","bodyParams","got","Array","isArray","deserialize","body","response","_error$response2","errors","errorJSON","handleError","AbstractApi","restClient","_restClient","ClientApi","getClientList","getClient","clientId","verifyClient","token","EmailApi","createEmail","params","SessionApi","getSessionList","getSession","sessionId","revokeSession","verifySession","SMSMessageApi","createSMSMessage","UserApi","getUserList","getUser","userId","updateUser","JSON","stringify","deleteUser","defaultApiKey","CLERK_API_KEY","defaultApiVersion","CLERK_API_VERSION","defaultServerApiUrl","CLERK_API_URL","Clerk","getInstance","_instance","defaultOnError","serverError","strictOnError","expressWithSession","onError","req","res","cookies","Cookies","sessionToken","get","query","_clerk_session_id","session","clients","client","find","lastActiveSessionId","_session","bind","expressRequireSession","_runMiddleware","withSession","handler","_this","_context2","json","end","requireSession","_clientApi","_emailApi","_sessionApi","_smsMessageApi","_userApi","singletonInstance","emails","smsMessages","users","ClerkExpressWithSession","ClerkExpressRequireSession"],"mappings":"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"}